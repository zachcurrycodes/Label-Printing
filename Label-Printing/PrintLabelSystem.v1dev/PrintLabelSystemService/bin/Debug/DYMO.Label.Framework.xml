<doc>
    <assembly>
        <name>DYMO.Label.Framework</name>
    </assembly>
    <members>
        <member name="T:DYMO.Label.Framework.AddressObject">
            <summary>
                Address label object.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.AddressObject.#ctor">
            <summary>Creates AddressObject using default properties.</summary>
        </member>
        <member name="M:DYMO.Label.Framework.AddressObject.#ctor(System.String)">
            <param name="name">Object name.</param>
            <summary>Creates AddressObject using specified name.</summary>
        </member>
        <member name="M:DYMO.Label.Framework.AddressObject.#ctor(System.String,System.String)">
            <param name="name">Object name.</param>
            <param name="text">Object text.</param>
            <summary>Creates AddressObject using specified name and text.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.AddressObject.BackgroundColor">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.AddressObject.BarcodePosition">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.AddressObject.FitMode">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.AddressObject.HorizontalAlignment">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.AddressObject.IsMirrored">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.AddressObject.LineCount">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.AddressObject.Rotation">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.AddressObject.SetLineFont(System.Int32,DYMO.Label.Framework.IFontInfo)">
            <inheritdoc cref="M:DYMO.Label.Framework.ITextObject.SetLineFont(System.Int32,DYMO.Label.Framework.IFontInfo)"/>
        </member>
        <member name="P:DYMO.Label.Framework.AddressObject.StyledText">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.AddressObject.Text">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.AddressObject.TextColor">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.AddressObject.TextMarkup">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.AddressObject.VerticalAlignment">
            <inheritdoc/>
        </member>

        <member name="T:DYMO.Label.Framework.BarcodeError">
            <summary>
                Specifies errors when barcode data is not compatible with barcode symbology.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.ECLevel">
            <summary>
                Invalid error correction level for 2D barcodes.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.HasControl">
            <summary>
                Barcode symbology does not support control (0-31) characters in the barcode data.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.HasHighChars">
            <summary>
                Barcode symbology does not support characters from upper ASCII table (codes &gt;= 128) in the barcode data.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.HasLowerCase">
            <summary>
                Barcode symbology supports only upper case characters in the barcode data.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_BarStringIsNull">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_ByteConversionFailed">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_CharacterRangeError">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_CodewordConversionFailed">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_LoadLibrary">
            <summary>
                Unable to load Intelligent Mail library.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_RetriveTableFailed">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_RouteStringBadLength">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_RouteStringHasInvalidData">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_RouteStringIsNull">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_SelftestFailed">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_TrackStringBadLength">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_TrackStringHasInvalidData">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_TrackStringHasInvalidDigit2">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.IMail_TrackStringIsNull">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.InvalidChar">
            <summary>
                Barcode symbology does not support one or more characters in the barcode data.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.InvalidStartStop">
            <summary>
                Barcode data contains invalid start/stop symbols.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.LibLength">
            <summary>
                Invalid library length (not 13 or 14).
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.None">
            <summary>
                No error.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.NoText">
            <summary>
                No barcode data is specified.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.NumericOnly">
            <summary>
                Barcode symbology only supports numeric characters in the barcode data.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.OddCount">
            <summary>
                Barcode symbology requires an odd number of characters in the barcode data.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.PlanetLength">
            <summary>
                Invalid Postent length.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.PostnetLength">
            <summary>
                Invalid Postent length (not 5, 9, or 11).
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.TooLong">
            <summary>
                Barcode data is too long.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeError.Unsupported">
            <summary>
                Barcode symbology is not supported.
            </summary>
        </member>
        <member name="T:DYMO.Label.Framework.BarcodeObject">
            <summary>
                Barcode label object.
            </summary>
            <remarks>
                Use this class to create Barcode objects programmatically.
                To access existing Barcode objects, use IBarcodeObject interface.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.BarcodeObject.#ctor">
            <summary>
                Creates BarcodeObject using default parameters.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.BarcodeObject.#ctor(System.String)">
            <param name="name">Object name.</param>
            <summary>
                Creates BarcodeObject using default parameters and a specified object name.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.BarcodeObject.#ctor(System.String,DYMO.Label.Framework.BarcodeType,System.String)">
            <param name="name">Object name.</param>
            <param name="barcodeType">Barcode symbology.</param>
            <param name="barcodeText">Barcode text.</param>
            <summary>
                Creates BarcodeObject using specified name, barcode type, and barcode data.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.BarcodeObject.BarcodeSize">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.BarcodeObject.BarcodeText">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.BarcodeObject.BarcodeType">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.BarcodeObject.HorizontalAlignment">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.BarcodeObject.LinkedObjectName">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.BarcodeObject.Rotation">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.BarcodeObject.TextFont">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.BarcodeObject.TextPosition">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.BarcodeObject.Validate">
            <inheritdoc/>
        </member>

        <member name="T:DYMO.Label.Framework.BarcodeSize">
            <summary>
                Specifies the barcode size.
            </summary>
            <remarks>
                Usually the size of the generated barcode is different if different size values are specified.
                However, the size of the generated barcode may be the same depending on the barcode symbology and the printer used to print the barcode.
            </remarks>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeSize.Large">
            <summary>
                Large barcode.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeSize.Medium">
            <summary>
                Medium barcode.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeSize.Small">
            <summary>
                Small barcode.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.BarcodeTextPosition">
            <summary>
                Specifies the position of the human-readable text relative to the barcode.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeTextPosition.Bottom">
            <summary>
                Displays human-readable text below barcode.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeTextPosition.None">
            <summary>
                No human-readable text is displayed.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeTextPosition.Top">
            <summary>
                Displays human-readable text above barcode.
            </summary>
        </member>
        <member name="T:DYMO.Label.Framework.BarcodeType">
            <summary>
                Specifies the barcode symbology.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Codabar">
            <summary>
                Codabar
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.CodabarLibL">
            <summary>
                Library Codabar (left)
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.CodabarLibR">
            <summary>
                Library Codabar (right)
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Code128A">
            <summary>
                Code 128 A
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Code128Auto">
            <summary>
                Code 128 Auto
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Code128B">
            <summary>
                Code 128 B
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Code128C">
            <summary>
                Code 128 C
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Code128Ean">
            <summary>
                Code 128 (EAN)
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Code2of5">
            <summary>
                Code 2 of 5
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Code39">
            <summary>
                Code 39
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Code39CS">
            <summary>
                Code 39 with checksum
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Code39LibL">
            <summary>
                Library Code 39 (left)
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Code39LibR">
            <summary>
                Library Code 39 (right)
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Ean13">
            <summary>
                EAN-13
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Ean8">
            <summary>
                EAN-8
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.IMail">
            <summary>Intellegent Mail</summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Itf14">
            <summary>
                ITF-14
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Pdf417">
            <summary>
                PDF 417
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Planet">
            <summary>
                Planet (obsolete, use IMail)
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Postnet">
            <summary>
                Postnet (obsolete, use IMail)
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.QRCode">
            <summary>
                QR code
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.Unknown">
            <summary />
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.UpcA">
            <summary>
                UPC-A
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.BarcodeType.UpcE">
            <summary>
                UPC-E
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.CircleTextAlignment">
            <summary>
                Specifies the text alignment for CircularTextObject when DisplayMode is set to 'CircularText'.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.CircleTextAlignment.CenterAtBottom">
            <summary>
                Text is centered along the vertical middle line of the object and is rendered along the bottom arc.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.CircleTextAlignment.CenterAtTop">
            <summary>
                Text is centered along the vertical middle line of the object and is rendered along the top arc.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.CircleTextAlignment.StartAngle">
            <summary>
                Text rendering starts at a specified angle and reads counterclockwise. (TODO: check is it clockwise or counterclockwise)
            </summary>
        </member>
        <member name="T:DYMO.Label.Framework.CircularTextObject">
            <summary>
                Circular Text label object.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.CircularTextObject.#ctor">
            <summary>Creates CircularTextObject using default properties.</summary>
        </member>
        <member name="M:DYMO.Label.Framework.CircularTextObject.#ctor(System.String,System.String,DYMO.Label.Framework.IFontInfo)">
            <param name="name">Object name.</param>
            <param name="text">Object text.</param>
            <param name="font">Object font.</param>
            <summary>Creates CircularTextObject object using specified name, text, and font.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.CircularTextObject.BackgroundColor">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CircularTextObject.DisplayMode">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CircularTextObject.Font">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CircularTextObject.Rotation">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CircularTextObject.StartAngle">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CircularTextObject.Text">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CircularTextObject.TextAlignment">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CircularTextObject.TextColor">
            <inheritdoc/>
        </member>

        <member name="T:DYMO.Label.Framework.Color">
            <summary>
                Describes color components.
            </summary>
            <remarks>
                <b>Color</b> describes color components in RGB color scheme. This includes alpha channel as well.
                The valid range for each component is [0-255].
                Use <see cref="M:DYMO.Label.Framework.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)"/> to create a color instance.
                To obtain the most useful colors, use <see cref="T:DYMO.Label.Framework.Colors"/> class.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Color.#ctor(System.Byte,System.Byte,System.Byte)">
            <param name="r">Red component value.</param>
            <param name="g">Green component value.</param>
            <param name="b">Blue component value.</param>
            <summary>
                Initializes <see cref="T:DYMO.Label.Framework.Color"/> as a completely opaque color using the specified red, green, and blue component values.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <param name="a">Alpha component value.</param>
            <param name="r">Red component value.</param>
            <param name="g">Green component value.</param>
            <param name="b">Blue component value.</param>
            <summary>
                Initializes <see cref="T:DYMO.Label.Framework.Color"/> using the specified alpha, red, green, and blue component values.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.Color.A">
            <summary>Alpha component.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.Color.B">
            <summary>Blue component.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.Color.G">
            <summary>Green component.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.Color.R">
            <summary>Red component.</summary>
        </member>
        <member name="T:DYMO.Label.Framework.Colors">
            <summary>
                Provides IColor instances for the most useful colors.
            </summary>
            <remarks>
                The values corresponded to the values of CSS colors with same names.
            </remarks>
        </member>
        <member name="F:DYMO.Label.Framework.Colors.Black">
            <summary>
                Black color.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.Colors.DarkGray">
            <summary>
                Dark gray color.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.Colors.Gray">
            <summary>
                Gray color.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.Colors.LightGray">
            <summary>
                Light gray color.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.Colors.Transparent">
            <summary>
                Transparent color.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.Colors.White">
            <summary>
                White color.
            </summary>
        </member>
        <member name="T:DYMO.Label.Framework.ContinuousLabel">
            <summary>
                Continuous label.
            </summary>
            <inheritdoc cref="T:DYMO.Label.Framework.IContinuousLabel"/>
        </member>
        <member name="M:DYMO.Label.Framework.ContinuousLabel.#ctor(System.String,DYMO.Label.Framework.PaperOrientation,DYMO.Label.Framework.ContinuousLabelLengthMode,System.Double)">
            <param name="labelId">The unique label ID. All label IDs are defined in Labels.xml. For DYMO Label software, labelId defines the label type. </param>
            <param name="paperOrientation">The paper/tape orientation used when the label is printed.</param>
            <param name="lengthMode">The label length mode; 'Auto' or 'Fixed'.</param>
            <param name="labelLength">Specifies the total label length if lengthMode is set to 'Fixed'. Otherwise, this parameter is ignored.</param>
        </member>
        <member name="M:DYMO.Label.Framework.ContinuousLabel.GetFixedLength">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.ContinuousLabel.LengthMode">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.ContinuousLabel.RootCell">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.ContinuousLabel.SetAutoLengthMode">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.ContinuousLabel.SetFixedLengthMode(System.Double)">
            <inheritdoc/>
        </member>
        
        <member name="T:DYMO.Label.Framework.ContinuousLabelCell">
            <summary>Continuous label cell.</summary>
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.ContinuousLabelCell.#ctor">
        </member>
        <member name="P:DYMO.Label.Framework.ContinuousLabelCell.BorderColor">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.ContinuousLabelCell.BorderStyle">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.ContinuousLabelCell.BorderWidth">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.ContinuousLabelCell.GetFixedSize">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.ContinuousLabelCell.GetProportionalRatio">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.ContinuousLabelCell.LabelObject">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.ContinuousLabelCell.ObjectMargin">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.ContinuousLabelCell.SetAutoSize">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.ContinuousLabelCell.SetFixedSize(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.ContinuousLabelCell.SetProportionalSize(System.Double)">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.ContinuousLabelCell.SizeMode">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.ContinuousLabelCell.Subcells">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.ContinuousLabelCell.SubcellsOrientation">
            <inheritdoc/>
        </member>

        <member name="T:DYMO.Label.Framework.ContinuousLabelCellSizeMode">
            <summary>
                Specifies the sizing options for a cell on a continuous (tape) label.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ContinuousLabelCellSizeMode.Auto">
            <summary>
                The cell size is determined by the size of all the subcells or by the size of the label object placed in the cell.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ContinuousLabelCellSizeMode.Fixed">
            <summary>
                The cell size is a fixed value.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ContinuousLabelCellSizeMode.Star">
            <summary>
                If the space is limited, the cell size is a weighted proportion of available space. If the space is not limited, the cell size is determined by the size of all the subcells or by the size of the label object placed in the cell (same as Auto).
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.ContinuousLabelLengthMode">
            <summary>
                Specifies the length mode for continuous (tape) labels.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ContinuousLabelLengthMode.Auto">
            <summary>
                The length of the label is automatically determined based on the label content.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ContinuousLabelLengthMode.Fixed">
            <summary>
                The length of the label is fixed. The label is printed using the specified length, regardless of the label content.
            </summary>
        </member>

        <member name="T:DYMO.Label.Framework.ContinuousSubcellsOrientation">
            <summary>
                Specifies the orientation of a subcells on a continuous (tape) label.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ContinuousSubcellsOrientation.Horizontal">
            <summary>
                Subcells are arranged horizontally within a parent cell.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ContinuousSubcellsOrientation.Vertical">
            <summary>
                Subcells are arranged vertically within a parent cell.
            </summary>
        </member>

        <member name="T:DYMO.Label.Framework.CounterObject">
            <summary>
                Counter label object.
            </summary>
            <inheritdoc cref="T:DYMO.Label.Framework.ICounterObject"/>
        </member>
        <member name="M:DYMO.Label.Framework.CounterObject.#ctor">
            <summary>
                Creates CounterObject using default properties.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.CounterObject.#ctor(System.String)">
            <param name="name">Object name.</param>
            <summary>
                Creates CounterObject using default properties and specified name.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.BackgroundColor">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.Current">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.FitMode">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.Font">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.FormatWidth">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.HorizontalAlignment">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.IncludeLeadingZeros">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.Increment">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.IsMirrored">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.PostText">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.PreText">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.Rotation">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.Start">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.Text">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.TextColor">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.VerticalAlignment">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.CounterObject.Verticalized">
            <inheritdoc/>
        </member>

        <member name="T:DYMO.Label.Framework.CircularTextDisplayMode">
            <summary>
                Specifies the display option for a Circular Text label object.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.CircularTextDisplayMode.ArcTextBottom">
            <summary>
                Displays text on bottom arc only.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.CircularTextDisplayMode.ArcTextTop">
            <summary>
                Displays text on top arc only.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.CircularTextDisplayMode.CircularText">
            <summary>
                Displays text on a full circle.
            </summary>
        </member>

        <member name="T:DYMO.Label.Framework.DashStyle">
            <summary>
                Specifies the dash style used to render the border for a continuous (tape) label.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DashStyle.Dash">
            <summary>
                Short dash line.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DashStyle.DashDot">
            <summary>
                Dash-dot line.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DashStyle.DashDotDot">
            <summary>
                Dash-dot-dot line.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DashStyle.Dot">
            <summary>
                Dotted line.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DashStyle.LongDash">
            <summary>
                Long dash line.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DashStyle.Solid">
            <summary>
                Solid line.
            </summary>
        </member>

        <member name="T:DYMO.Label.Framework.DateFormat">
            <summary>
                Specifies the date format for a Date and Time label object.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.AbbrMonthDayLongYear">
            <summary>
                Displays the date using the following format: Jul 4, 2008.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.AbbrMonthDayYear">
            <summary>
                Displays the date using the following format: Jul 4, 08.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.AbbrWeekdayAbbrMonthDayLongYear">
            <summary>
                Displays the date using the following format: Fri, Jul 4, 2008.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.AbbrWeekdayDayAbbrMonthLongYear">
            <summary>
                Displays the date using the following format: Fri, 4 Jul, 2008.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.DayAbbrMonthLongYear">
            <summary>
                Displays the date using the following format: 4-Jul-2008.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.DayAbbrMonthYear">
            <summary>
                Displays the date using the following format: 4-Jul-08.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.DayLongMonthLongYear">
            <summary>
                Displays the date using the following format: 4 July, 2008.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.DayMonthLongYear">
            <summary>
                Displays the date using the following format: 4/7/2008 (the delimiter is culture sensitive).
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.DayMonthYear">
            <summary>
                Displays the date using the following format: 4/7/08 (the delimiter is culture sensitive).
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.LongMonthDayLongYear">
            <summary>
                Displays the date using the following format: July 4, 2008.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.LongSystemDate">
            <summary>
                Displays the date using long system date format.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.MonthDayLongYear">
            <summary>
                Displays the date using the following format: 7/4/2008 (the delimiter is culture sensitive).
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.MonthDayYear">
            <summary>
                Displays the date using the following format: 7/4/08 (the delimiter is culture sensitive).
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.None">
            <summary>
                No date is displayed.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.ShortSystemDate">
            <summary>
                Displays the date using short system date format.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.WeekdayDayLongMonthLongYear">
            <summary>
                Displays the date using the following format: Friday, 4 July, 2008.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.DateFormat.WeekdayLongMonthDayLongYear">
            <summary>
                Displays the date using the following format: Friday, July 4, 2008.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.DateTimeObject">
            <summary>
                Date and Time label object.
            </summary>
            <inheritdoc cref="T:DYMO.Label.Framework.IDateTimeObject"/>
        </member>
        <member name="M:DYMO.Label.Framework.DateTimeObject.#ctor">
            <summary>
                Creates DateTimeObject using default properties.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.DateTimeObject.#ctor(System.String)">
            <param name="name">Object name.</param>
            <summary>
                Creates DateTimeObject using default properties and specified name.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.BackgroundColor">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.Culture">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.DateFormat">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.FitMode">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.Font">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.HorizontalAlignment">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.IncludeTime">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.IsMirrored">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.PostText">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.PreText">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.Rotation">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.Text">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.TextColor">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.Use24HourFormat">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.VerticalAlignment">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DateTimeObject.Verticalized">
            <inheritdoc/>
        </member>

        <member name="T:DYMO.Label.Framework.DieCutLabel">
            <summary>Die-cut label.</summary>
            <inheritdoc cref="T:DYMO.Label.Framework.IDieCutLabel"/>
        </member>
        <member name="M:DYMO.Label.Framework.DieCutLabel.#ctor(System.String,DYMO.Label.Framework.PaperOrientation)">
            <param name="labelId">The unique label ID. All label IDs are defined in Labels.xml. For DYMO Label software, labelId defines the label type.</param>
            <param name="paperOrientation">The paper orientation used to print the label.</param>
        </member>
        <member name="M:DYMO.Label.Framework.DieCutLabel.AddObject(DYMO.Label.Framework.ILabelObject,DYMO.Label.Framework.IRect)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.DieCutLabel.BringToFront(DYMO.Label.Framework.ILabelObject)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.DieCutLabel.DeleteObject(DYMO.Label.Framework.ILabelObject)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.DieCutLabel.MoveObject(DYMO.Label.Framework.ILabelObject,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.DieCutLabel.ObjectBounds">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.DieCutLabel.ResizeObject(DYMO.Label.Framework.ILabelObject,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.DieCutLabel.SendToBack(DYMO.Label.Framework.ILabelObject)">
            <inheritdoc/>
        </member>

        <member name="T:DYMO.Label.Framework.FlowDirection">
            <summary>
                Specifies the direction of the label content on the label.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.FlowDirection.LeftToRight">
            <summary>
                The label content flows from left to right. Use this for Western languages, such as English.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.FlowDirection.RightToLeft">
            <summary>
                The label content flows from right to left. Use this for Middle Eastern languages, such as Hebrew.
            </summary>
        </member>

        <member name="T:DYMO.Label.Framework.FontInfo">
            <summary> Provides information about a font.</summary>
            <inheritdoc cref="T:DYMO.Label.Framework.IFontInfo"/>
        </member>
        <member name="M:DYMO.Label.Framework.FontInfo.#ctor(System.String,System.Double,DYMO.Label.Framework.FontStyle)">
            <param name="fontName">Font name.</param>
            <param name="fontSize">Font size.</param>
            <param name="fontStyle">Font style.</param>
        </member>
        <member name="P:DYMO.Label.Framework.FontInfo.FontName">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.FontInfo.FontSize">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.FontInfo.FontStyle">
            <inheritdoc/>
        </member>

        <member name="T:DYMO.Label.Framework.FontStyle">
            <summary>
                Specifies the font style.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.FontStyle.Bold">
            <summary>
                Bold text.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.FontStyle.Italic">
            <summary>
                Italic text.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.FontStyle.None">
            <summary>
                Normal style text.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.FontStyle.Strikeout">
            <summary>
                Strikeout text.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.FontStyle.Underline">
            <summary>
                Underline text.
            </summary>
        </member>

        <member name="T:DYMO.Label.Framework.Framework">
            <summary>
                Provides access to the most frequently used functions of the DYMO Label Framework.
            </summary>
            <remarks>
                This static class is modeled after the IDYMOAddIn interface of the DLS7 High-Level SDK.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Framework.GetLabelWriterPrinters">
            <summary>Gets a list of all available LabelWriter printers.</summary>
            <returns>
                <see cref="T:DYMO.Label.Framework.IPrinters"/> instance is used to access the printers list.
            </returns>
            <remarks>
                This method returns a list of printers that can be used to print die-cut labels, such as Address or Shipping labels.
                The list includes the same printers as would be returned by the DLS7 SDK GetDymoPrinters() function.
                
                <note type="tip">
                    The <see cref="T:DYMO.Label.Framework.IPrinter"/> elements of the list are guaranteed to be instances of
                    <see cref="T:DYMO.Label.Framework.ILabelWriterPrinter"/>.
                </note>
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Framework.GetPrinters">
            <summary>Gets a list of all available DYMO printers.</summary>
            <returns>
                <see cref="T:DYMO.Label.Framework.IPrinters"/> instance is used to access the printers list.
            </returns>
            <remarks>
                This method returns a list of printers that can be used to print using the DYMO Label Framework. 
                This list includes both LabelWriter and Tape printers. 
                Use <see cref="M:DYMO.Label.Framework.Framework.GetLabelWriterPrinters"/> to get a list of LabelWriter printers only.
                Use <see cref="M:DYMO.Label.Framework.Framework.GetTapePrinters"/> to get a list of Tape printers only.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Framework.GetTapePrinters">
            <summary>Gets a list of all available Tape printers.</summary>
            <returns>
                <see cref="T:DYMO.Label.Framework.IPrinters"/> instance is used to access the printers list.
            </returns>
            <remarks>
                This method returns a list of printers that can be used to print tape labels, such as 12 mm tape or 24 mm tape.
                The list includes the same printers as would be returned by the DLS7 Tape SDK GetDymoPrinters() function.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Framework.Open(System.String)">
            <param name="uri" >The file or URL to open.</param>
            <returns>Opened label.</returns>
            <summary>
                Opens a label.
            </summary>
            <remarks>
                This method opens a label; <paramref name="uri"/> can be either a file name or a URL.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Framework.SaveAs(DYMO.Label.Framework.ILabel,System.String)">
            <param name="label">The label to save.</param>
            <param name="fileName">File name to use to save the label.</param>
            <summary>Saves a label as a file.</summary>
        </member>
        <member name="T:DYMO.Label.Framework.Globals">
            <summary>
                Specifies the global properties/settings.
            </summary>
            <remarks>
                These settings are implemented as global settings because they are rarely used.
                If these settings were not implemented as global settings, they would need to be implemented as parameters to methods, making the Framework more difficult to use.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Globals.WebProxy">
            <summary>
                WebProxy settings used to load labels and images from a URL.
            </summary>
        </member>

        <member name="T:DYMO.Label.Framework.HorizontalAlignment">
            <summary>
                Specifies the horizontal alignment of the content of a barcode or image object related to the object bounds.
                Note: For RightToLeft flow, 'left' means 'right' and 'right' means 'left'.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.HorizontalAlignment.Center">
            <summary>
                Content is centered.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.HorizontalAlignment.Left">
            <summary>
                Content is left aligned.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.HorizontalAlignment.Right">
            <summary>
                Content is right aligned.
            </summary>
        </member>

        <member name="T:DYMO.Label.Framework.IAddressObject">
            <summary>
                Interface to Address label object.
            </summary>
            <remarks>
                An Address object displays address data.
                If the address data includes a valid ZIP code, a corresponding Intelligent Mail barcode can be displayed as well.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IAddressObject.BackgroundColor">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.BackgroundColor"/>
        </member>
        <member name="P:DYMO.Label.Framework.IAddressObject.BarcodePosition">
            <summary>
                Specifies the position of the Intelligent Mail barcode relative to the address data.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IAddressObject.FitMode">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.FitMode"/>
        </member>
        <member name="P:DYMO.Label.Framework.IAddressObject.HorizontalAlignment">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.HorizontalAlignment"/>
        </member>
        <member name="P:DYMO.Label.Framework.IAddressObject.IsMirrored">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.IsMirrored"/>
        </member>
        <member name="P:DYMO.Label.Framework.IAddressObject.LineCount">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.LineCount"/>
        </member>
        <member name="P:DYMO.Label.Framework.IAddressObject.Rotation">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Rotation"/>
        </member>
        <member name="M:DYMO.Label.Framework.IAddressObject.SetLineFont(System.Int32,DYMO.Label.Framework.IFontInfo)">
            <inheritdoc cref="M:DYMO.Label.Framework.ITextObject.SetLineFont(System.Int32,DYMO.Label.Framework.IFontInfo)"/>
        </member>
        <member name="P:DYMO.Label.Framework.IAddressObject.StyledText">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.StyledText"/>
        </member>
        <member name="P:DYMO.Label.Framework.IAddressObject.Text">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Text"/>
        </member>
        <member name="P:DYMO.Label.Framework.IAddressObject.TextColor">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.TextColor"/>
        </member>
        <member name="P:DYMO.Label.Framework.IAddressObject.TextMarkup">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.TextMarkup"/>
        </member>
        <member name="P:DYMO.Label.Framework.IAddressObject.VerticalAlignment">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.VerticalAlignment"/>
        </member>

        <member name="T:DYMO.Label.Framework.IBarcodeObject">
            <summary>
                Interface to Barcode label object.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IBarcodeObject.BarcodeSize">
            <summary>
                Specifies the barcode size.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IBarcodeObject.BarcodeText">
            <summary>
                Specifies the barcode data.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IBarcodeObject.BarcodeType">
            <summary>
                Specifies the barcode symbology.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IBarcodeObject.HorizontalAlignment">
            <summary>
                Specifies the horizontal alignment of the barcode in relation to the object bounds.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IBarcodeObject.LinkedObjectName">
            <summary>
                Specifies the reference name of the object on the label that contains the barcode data.
                If set to an not empty string the text of specified object
                will be used as barcode data instead of BarcodeText property
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IBarcodeObject.Rotation">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Rotation"/>
        </member>
        <member name="P:DYMO.Label.Framework.IBarcodeObject.TextFont">
            <summary>
                Specifies the font used to render the human-readable text.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IBarcodeObject.TextPosition">
            <summary>
                Specifies the position of the human-readable text in relation to the barcode.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.IBarcodeObject.Validate">
            <summary>
                Validates that the BarcodeText complies with the BarcodeType.
            </summary>
            <remarks>Note: This method uses BarcodeText to get the barcode data, even if LinkedObjectName is specified.</remarks>
            <returns>
                Corresponding <see cref="T:DYMO.Label.Framework.BarcodeError"/>.
            </returns>
        </member>

        <member name="T:DYMO.Label.Framework.ICircularTextObject">
            <summary>
                Interface to Circular Text label object.
            </summary>
            <remarks>A Circular Text object displays text on a circle or arc.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ICircularTextObject.BackgroundColor">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.BackgroundColor"/>
        </member>
        <member name="P:DYMO.Label.Framework.ICircularTextObject.DisplayMode">
            <summary>
                Specifies how the text is displayed.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ICircularTextObject.Font">
            <summary>
                Specifies the font used to render the object text.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ICircularTextObject.Rotation">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Rotation"/>
        </member>
        <member name="P:DYMO.Label.Framework.ICircularTextObject.StartAngle">
            <summary>
                Specifies the angle, in radians, where rendering of the object text starts.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ICircularTextObject.Text">
            <summary>
                Specifies the object text.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ICircularTextObject.TextAlignment">
            <summary>
                Specifies the text alignment.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ICircularTextObject.TextColor">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.TextColor"/>
        </member>
        
        <member name="T:DYMO.Label.Framework.IColor">
            <summary>
                Describes color components.
            </summary>
            <remarks>
                <b>IColor</b> describes color components in RGB color scheme. This includes alpha channel as well.
                The valid range for each component is [0-255]. 
                Use <see cref="M:DYMO.Label.Framework.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)"/> to create a color instance.
                To obtain the most useful colors, use <see cref="T:DYMO.Label.Framework.Colors"/> class.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IColor.A">
            <summary>
                Alpha/transparency channel.
            </summary>
            <remarks>The value of <c>0</c> represents a completely transparent color; the value of <c>255</c> represents a completely opaque color.
        </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IColor.B">
            <summary>
                Blue channel.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IColor.G">
            <summary>
                Green channel.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IColor.R">
            <summary>
                Red channel.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.IContinuousLabel">
            <summary>
                Interface to continuous (tape) label type.
            </summary>
            <remarks>
                Continuous labels are mainly used to create labels that will be printed
                to Tape printers, such as 'DYMO LabelMANAGER PC II' or 'DYMO LabeslWriter DUO Tape'.
                The main difference between continuous labels and die-cut labels (used to print to LabelWriter printers) is that continuous labels are designed to adapt their size (length) based on the label content.
                Although the size (length) for a continuous label can be fixed, the fixed size can easily be changed without changing the layout of the objects on the label.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IContinuousLabel.GetFixedLength">
            <summary>
                Gets the fixed label length.
            </summary>
            <remarks>
                This method returns the total label length in DPI (1/96 inch) if LengthMode is set to 'Fixed'.
                This method throws an exception if LengthMode is set to 'Auto'.
            </remarks>
            <returns>The total label length in DPI (1/96 inch).</returns>
        </member>
        <member name="P:DYMO.Label.Framework.IContinuousLabel.LengthMode">
            <summary>
                Gets the label length sizing mode.
            </summary>
            <remarks>
                If 'Auto', the total label length is calculated and adjusted based on the content of label.
                If 'Fixed', the total label length is set by calling the SetFixedLengthMode() method.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IContinuousLabel.RootCell">
            <summary>
                Returns the top level/root cell. 
            </summary>
            <remarks>The root cell can contains other cells (subcells), and subcells can also contain other cells or be containers for label objects. The root cell and subcells create a tree-like structure. Cell properties determine the overall label layout.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IContinuousLabel.SetAutoLengthMode">
            <summary>
                Sets the label length sizing mode to 'Auto'.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.IContinuousLabel.SetFixedLengthMode(System.Double)">
            <param name="fixedLength">Total label length (including leader and trailer) in DPI.</param>
            <summary>
                Sets the label length sizing mode to 'Fixed'.
            </summary>
        </member>
        <member name="T:DYMO.Label.Framework.IContinuousLabelCell">
            <summary>Describes one layout element for ContinuousLabel.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IContinuousLabelCell.BorderColor">
            <summary>Cell border color.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IContinuousLabelCell.BorderStyle">
            <summary>Cell border style.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IContinuousLabelCell.BorderWidth">
            <summary>Cell border width in DPI.</summary>
        </member>
        <member name="M:DYMO.Label.Framework.IContinuousLabelCell.GetFixedSize">
            <summary>Gets the cell length if sizing mode is 'Fixed'.</summary>
            <returns>
                Cell length in DPI (1/96 inch).
            </returns>
        </member>
        <member name="M:DYMO.Label.Framework.IContinuousLabelCell.GetProportionalRatio">
            <summary>Gets the proportional size of the cell, relative to the other cells in the parent cell, if sizing mode is 'Star'.</summary>
            <returns>Cell ratio.</returns>
        </member>
        <member name="P:DYMO.Label.Framework.IContinuousLabelCell.LabelObject">
            <summary>Gets a label object that is placed inside the cell.</summary>
            <remarks>A cell can contain other cells or a label object.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IContinuousLabelCell.ObjectMargin">
            <summary>Specifies the label object margins within the cell.</summary>
            <remarks>Use this property to offset the label object from other objects placed in different cells.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IContinuousLabelCell.SetAutoSize">
            <summary>Sets sizing mode to 'Auto'.</summary>
            <remarks></remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IContinuousLabelCell.SetFixedSize(System.Double)">
            <param name="fixedSize">Fixed cell length in DPI.</param>
            <summary>Sets sizing mode to 'Fixed'.</summary>
        </member>
        <member name="M:DYMO.Label.Framework.IContinuousLabelCell.SetProportionalSize(System.Double)">
            <param name="ratio">Cell ratio.</param>
            <summary>Sets the sizing mode to 'Proportional'.</summary>
            <remarks>
                In 'Proportional' sizing mode, the cell length is calculated as 
                a percentage of the cell ratio to a sum of the ratio for all cells inside the parent cell.
                For example, if a cell has three subcells with a ratio of 1:2:1, the
                the first and third subcells will each occupy 25% (1/4) of the parent cell
                and the second subcell will occupy 50% (2/4) of the parent cell.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IContinuousLabelCell.SizeMode">
            <summary>Gets the sizing mode of the cell.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IContinuousLabelCell.Subcells">
            <summary>Gets the subcells of the cell.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IContinuousLabelCell.SubcellsOrientation">
            <summary>Gets the orientation of the subcells.</summary>
            <remark>All subcells in a cell are stacked either horizontally or vertically.</remark>
        </member>
        
        <member name="T:DYMO.Label.Framework.ICounterObject">
            <summary>
                Interface to Counter label object.
            </summary>
            <remarks>
                A Counter object can display a numeric value that automatically changes (incrementally)
                every time a label is printed.
                In addition, text can be displayed before and/or after the numberic value.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.BackgroundColor">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.BackgroundColor"/>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.Current">
            <summary>
                Gets the current value of the counter.
            </summary>
            <remarks>To reset the counter, assign the desired value to the Start property.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.FitMode">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.FitMode"/>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.Font">
            <summary>
                Specifies the font used to render the object content.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.FormatWidth">
            <summary>
                Specifies the number of digits used to display the counter.
            </summary>
            <remarks>If the counter value contains less digits than specified by the FormatWidth property, the counter value is padded on the left with zeros (0) or spaces.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.HorizontalAlignment">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.HorizontalAlignment"/>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.IncludeLeadingZeros">
            <summary>
                Specifies how the counter value is padded if the counter contains less digits then specified by the FormatWidth property.
            </summary>
            <remarks>
                If true, the value is padded with zeros (0). If false, the value is padded with spaces.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.Increment">
            <summary>
                Specifies the value by which the counter is incremented each time a label is printed.
            </summary>
            <remarks>
                To decrease the counter value each time a label is printed, specify a negative number.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.IsMirrored">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.IsMirrored"/>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.PostText">
            <summary>
                Specifies the text to display after the counter value in the Counter object.
            </summary>
            <remarks>A space is NOT added automatically before PostText.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.PreText">
            <summary>
                Specifies the text to display before the counter value in the Counter object.
            </summary>
            <remarks>A space is NOT added automatically after PreText.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.Rotation">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Rotation"/>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.Start">
            <summary>
                Specifies the start value for the counter.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.Text">
            <summary>
                Gets full object text as displayed on a label.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.TextColor">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.TextColor"/>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.VerticalAlignment">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.VerticalAlignment"/>
        </member>
        <member name="P:DYMO.Label.Framework.ICounterObject.Verticalized">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Verticalized"/>
        </member>
        
        <member name="T:DYMO.Label.Framework.IDateTimeObject">
            <summary>
                Interface to Date and Time label object.
            </summary>
            <remarks>
                A Date and Time object can display the current date and/or time in a variety of formats.
                In addition, text can be displayed before and/or after the date and time.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.BackgroundColor">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.BackgroundColor"/>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.Culture">
            <summary>
                Specifies the culture used to format the date and time.
            </summary>
            <remarks>
                The value must be a valid specific culture name (for example,'en-US' or 'fr-CA')
                or an empty string (default). If the value is an empty string, the current thread culture is used.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.DateFormat">
            <summary>
                Specifies the format of the date and time.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.FitMode">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.FitMode"/>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.Font">
            <summary>
                Specifies the font used to render the object content.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.HorizontalAlignment">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.FitMode"/>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.IncludeTime">
            <summary>
                Specifies whether or not to include the time in the object content.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.IsMirrored">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.IsMirrored"/>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.PostText">
            <summary>
                Specifies the text to display after the date and time in the Date and Time object.
            </summary>
            <remarks>A space is NOT added automatically before PostText.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.PreText">
            <summary>
                Specifies the text to display before the date and time in the Date and Time object.
            </summary>
            <remarks>A space is NOT added automatically after PreText.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.Rotation">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Rotation"/>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.Text">
            <summary>
                Gets full object text as displayed on a label.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.TextColor">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Rotation"/>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.Use24HourFormat">
            <summary>
                Specifies whether the time is formatted using 24-hour format or 12-hour format.
            </summary>
            <remarks>If true, 24-hour format is used. If false, 12-hour format is used.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.VerticalAlignment">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.VerticalAlignment"/>
        </member>
        <member name="P:DYMO.Label.Framework.IDateTimeObject.Verticalized">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Verticalized"/>
        </member>
        
        <member name="T:DYMO.Label.Framework.IDieCutLabel">
            <summary>Interface to die-cut label type.</summary>
            <remarks>
                Die-cut labels are mainly used to create labels that will be printed to LabelWriter printers; for example, Address or Shipping labels.
                The main differences between die-cut labels and continuous (tape) labels are as follows:<br/>
                Die-cut labels are designed so that label objects can be placed anywhere within the printable bounds of the label.<br/>
                Objects on a die-cut label have fixed dimensions (width and height), and do not adjust automatically based on the object content.<br/>
                <b>Note:</b> This applies to object size only. The object content can be adjusted automatically based on the size of the object using 'Shrink To Fit'.<br/>
                Use <see cref="T:DYMO.Label.Framework.DieCutLabel"/> to create an empty label.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IDieCutLabel.AddObject(DYMO.Label.Framework.ILabelObject,DYMO.Label.Framework.IRect)">
            <param name="labelObject">Object to add to the label.</param>
            <param name="bounds">Object bounds on the label.</param>
            <summary>Adds a label object to the label.</summary>
            <remarks>
                The units of measure for <paramref name="bounds"/> parameter are DPI.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IDieCutLabel.BringToFront(DYMO.Label.Framework.ILabelObject)">
            <param name="labelObject">Object to bring to the front.</param>
            <summary>Brings an object to the front.</summary>
            <remarks>
                <b>BringToFront</b> brings the <paramref name="labelObject"/> to the front; the object is rendered on top of all other objects on the label.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IDieCutLabel.DeleteObject(DYMO.Label.Framework.ILabelObject)">
            <param name="labelObject">Object to delete from the label.</param>
            <summary>Deletes an object from the label.</summary>
            <remarks>
                <b>DeleteObject</b> deletes the <paramref name="labelObject"/> from the label.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IDieCutLabel.MoveObject(DYMO.Label.Framework.ILabelObject,System.Double,System.Double)">
            <param name="labelObject">Object to move.</param>
            <param name="x">X-coordinate to move the object to.</param>
            <param name="y">Y-coordinate to move the object to.</param>
            <summary>Moves an object on the label.</summary>
            <remarks>
                <b>MoveObject</b> moves the object to the coordinates specified by <paramref name="x"/> and <paramref name="y"/> parameters.
                The units of measure for <paramref name="x"/> and <paramref name="y"/> parameters are DPI.
        </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IDieCutLabel.ObjectBounds">
            <summary>
                Provides access to object bounds.
            </summary>
            <remarks>Use this property to obtain or set object bounds.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IDieCutLabel.ResizeObject(DYMO.Label.Framework.ILabelObject,System.Double,System.Double)">
            <param name="labelObject">Object to resize.</param>
            <param name="width">New width of object.</param>
            <param name="height">New height of object.</param>
            <summary>Resizes an object on the label.</summary>
            <remarks>
                <b>ResizeObject</b> sets the object size to the value specified by <paramref name="width"/> and <paramref name="height"/> parameters.
                The units of measure for <paramref name="width"/> and <paramref name="height"/> parameters are DPI.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IDieCutLabel.SendToBack(DYMO.Label.Framework.ILabelObject)">
            <param name="labelObject">Object to send to the back.</param>
            <summary>Sends an object to the back.</summary>
            <remarks>
                <b>SendToBack</b> sends <paramref name="labelObject"/> to the back; the object is rendered behind all other objects on the label.
            </remarks>
        </member>
        <member name="T:DYMO.Label.Framework.IDieCutLabelObjectBounds">
            <summary>
                Indexer for object bounds.
            </summary>
            <remarks>Internal interface to access object bounds.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IDieCutLabelObjectBounds.Item(DYMO.Label.Framework.ILabelObject)">
            <param name="labelObject" >Object to get bounds for.</param>
            <summary>
                Provides access to object bounds by object reference.
            </summary>
            <returns>
                <see cref="T:DYMO.Label.Framework.IRect"/> object specifies the object bounds.
            </returns>
            <remarks>
                The units of measure for the returned <see cref="T:DYMO.Label.Framework.IRect"/> are DPI.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IDieCutLabelObjectBounds.Item(System.String)">
            <param name="objectName">
                Name of object to get bounds for.
            </param>
            <summary>
                Provides access to object bounds by object name.
            </summary>
            <returns>
                <see cref="T:DYMO.Label.Framework.IRect"/> object specifies the object bounds.
            </returns>
            <remarks>
                <note type="caution">
                    If there are several objects on a label with same name, the bounds of the first object with the specified name will be returned/set.
                </note>
            </remarks>
        </member>
        
        <member name="T:DYMO.Label.Framework.IFontInfo">
            <summary>Holds font information.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IFontInfo.FontName">
            <summary>Font name; for example, Arial.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IFontInfo.FontSize">
            <summary>Font size in points.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IFontInfo.FontStyle">
            <summary>Font style; for example, Bold or Italic.</summary>
        </member>

        <member name="T:DYMO.Label.Framework.IImageObject">
            <summary>Interface to an Image label object.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IImageObject.BorderColor">
            <summary>Border color.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IImageObject.BorderWidth">
            <summary>Border width in DPI.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IImageObject.HorizontalAlignment">
            <summary>Horizontal alignment of the image within the object bounds.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IImageObject.ImagePngData">
            <summary>Gets or sets image data using PNG format.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IImageObject.ImagePngDataBase64">
            <summary>Gets or sets image data using PNG format encoded as base64 string.</summary>
        </member>
        <member name="M:DYMO.Label.Framework.IImageObject.LoadFromFile(System.String)">
            <param name="fileName">File name to load an image from.</param>
            <summary>Loads image data from a file.</summary>
        </member>
        <member name="M:DYMO.Label.Framework.IImageObject.LoadFromUri(System.String)">
            <param name="uri">URL to load an image from.</param>
            <summary>Loads image data from a URL.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IImageObject.Rotation">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Rotation"/>
        </member>
        <member name="P:DYMO.Label.Framework.IImageObject.ScaleMode">
            <summary>Specifies how the image is scaled within the object bounds.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IImageObject.VerticalAlignment">
            <summary>Vertical alignment of the image within the object bounds.</summary>
        </member>

        <member name="T:DYMO.Label.Framework.ILabel">
            <summary>
                Provides the base interface for label operations.
            </summary>
            <remarks>
                ILabel interface provides methods for performing label operations common to all label interfaces.
            </remarks>
            <example>
                The following example shows the simplest way to print a label.
                <code>
                    <![CDATA[
                    void PrintLabel()
                    {
                        // obtain a reference to ILabel by loading a label from a file
                        ILabel label = Label.Open("MyLabel.label");
                        // print it
                        label.Print("DYMO LabelWriter 450 Turbo");
                    }
                    ]]>
                </code>
            </example>
            <seealso cref="T:DYMO.Label.Framework.IDieCutLabel"/>
            <seealso cref="T:DYMO.Label.Framework.IContinuousLabel"/>
            <seealso cref="T:DYMO.Label.Framework.Label"/>
        </member>
        <member name="P:DYMO.Label.Framework.ILabel.AddressObjectCount">
            <summary>Gets the number of Address objects on the label.</summary>
            <remarks>
                This property returns the number of Address objects on the label. Use this property with
                <see cref="M:DYMO.Label.Framework.ILabel.SetAddressText(System.Int32,System.String)">SetAddressText</see> or
                <see cref="M:DYMO.Label.Framework.ILabel.SetPostnetBarcodePosition(System.Int32,DYMO.Label.Framework.PostnetBarcodePosition)">SetPostnetBarcodePosition</see>
                to set address information.
            </remarks>
            <example>
                <code>
                    <![CDATA[
                    void SetAddressTextAndPrint()
                    {
                        // obtain a reference to ILabel by loading a label from a file
                        ILabel label = Label.Open("MyLabel.label");

                        // put address data into the first address object
                        if (label.AddressObjectCount > 0)
                            label.SetAddressText(0, "DYMO\n828 San Pablo Ave STE 101\nAlbany CA 94706");

                        // print it
                        label.Print("DYMO LabelWriter 450 Turbo");
                    }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.GetObjectByName(System.String)">
            <param name="objectName">Name of the label object to get.</param>
            <summary>
                Gets <see cref="T:DYMO.Label.Framework.ILabelObject"/> with the specified name.
            </summary>
            <returns>
                <see cref="T:DYMO.Label.Framework.ILabelObject"/> instance of label object specified by <paramref name="objectName"/>.
            </returns>
            <remarks>
                GetObjectByName method returns <see cref="T:DYMO.Label.Framework.ILabelObject"/> reference of an object on the label using object name as a key.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
                There is no label object with <paramref name="objectName"/> name on the label.
            </exception>
            <seealso cref="P:DYMO.Label.Framework.ILabel.ObjectNames"/>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.GetObjectText(System.String)">
            <param name="objectName">Name of the label object to get text from.</param>
            <summary>Gets the text content of the label object.</summary>
            <returns>Text content of the label object.</returns>
            <remarks>
                GetObjectText method returns a string that represents the plain text of the specified label objectName, without any formatting information.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
                There is no label object with <paramref name="objectName"/> name on the label.
            </exception>
        </member>
        <member name="P:DYMO.Label.Framework.ILabel.ObjectNames">
            <summary>Gets the names of all label objects on the label.</summary>
            <remarks>
                <note type="caution">
                    DYMO Label Framework does not restrict object names in any way. Therefore, a name
                    can be an empty string and there can be multiple objects with the same name on the same label.
                    It is application responsibility to add any required name validation logic if needed.
                </note>
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ILabel.Objects">
            <summary>Gets a list of all objects on the label.</summary>
            <remarks>
                To add or remove objects from the label, use label type specific methods, such as <see cref="M:DYMO.Label.Framework.IDieCutLabel.AddObject(DYMO.Label.Framework.ILabelObject,DYMO.Label.Framework.IRect)">IDieCutLabel.AddObject</see>.
                <note type="caution">
                    The order of the objects on the label is dependent on the label type, is unspecified, and can be changed in the future.
                </note>
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.Print(DYMO.Label.Framework.IPrinter)">
            <param name="printer">
                Printer to print to.
            </param>
            <summary>
                Prints a single label using default parameters.
            </summary>
            <remarks>
                To get <see cref="T:DYMO.Label.Framework.IPrinter"/> reference, use <see cref="T:DYMO.Label.Framework.Printers"/> class.
            </remarks>
            <example>
                <code>
                    <![CDATA[
                    void PrintAddressLabel()
                    {
                        // obtain a reference to ILabel by loading a label from a file
                        ILabel label = Label.Open("MyAddressLabel.label");

                        // get a reference to first connected printer
                        ILabelWriterPrinter printer = Framework.GetLabelWriterPrinters().First(p => p.IsConnected) as ILabelWriterPrinter;

                        // print it
                        label.Print(printer);
                    }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.Print(System.String)">
            <param name="printerName">
                Name of the printer to print to.
            </param>
            <summary>
                Prints a single label using default parameters.
            </summary>
            <remarks>
                Use this method if the printer name is known, for example, if the printer name is specified in some configuration file. Otherwise, enumerate printers using 
                <see cref="M:DYMO.Label.Framework.Framework.GetPrinters">Framework.GetPrinters</see>, find printer based on an application needs, and pass it to any <see cref="M:DYMO.Label.Framework.ILabel.Print"/> method that
                accepts <see cref="T:DYMO.Label.Framework.IPrinter"/> as a parameter.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.Print(DYMO.Label.Framework.IPrinter,DYMO.Label.Framework.IPrintParams)">
            <param name="printer" >Printer to print to.</param>
            <param name="printParams">Print parameters.</param>
            <summary>
                Prints a single label using specified print parameters.
            </summary>
            <remarks>
                Use this method to adjust printing by specifying values, such as number of copies to print, job title, and so on.
                <note type="important">
                    The print parameters interface must correspond to to the printer interface.
                    For example, use <see cref="T:DYMO.Label.Framework.ILabelWriterPrintParams"/> for <see cref="T:DYMO.Label.Framework.ILabelWriterPrinter"/>, or
                    use <see cref="T:DYMO.Label.Framework.ITapePrintParams"/> for <see cref="T:DYMO.Label.Framework.ITapePrinter"/>. If
                    <paramref name="printer"/> and <paramref name="printParams"/> do not match, an exception is thrown.
                </note>
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.Print(System.String,DYMO.Label.Framework.IPrintParams)">
            <param name="printerName" >
                Name of the printer to print to.
            </param>
            <param name="printParams" >
                Print parameters.
            </param>

            <summary>
                Prints a single label using specified print parameters.
            </summary>
            <remarks>
                Use this method to adjust printing by specifying values, such as number of copies to print, job title, and so on.
                <note type="important">
                    The print parameters interface must correspond to to the printer interface.
                    For example, use <see cref="T:DYMO.Label.Framework.ILabelWriterPrintParams"/> for <see cref="T:DYMO.Label.Framework.ILabelWriterPrinter"/>, or
                    use <see cref="T:DYMO.Label.Framework.ITapePrintParams"/> for <see cref="T:DYMO.Label.Framework.ITapePrinter"/>. If
                    <paramref name="printerName"/> and <paramref name="printParams"/> do not match, an exception is thrown.
                </note>
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.Print(DYMO.Label.Framework.IPrinter,DYMO.Label.Framework.IPrintParams,System.String)">
            <param name="printer" >Printer to print to.</param>
            <param name="printParams">Print parameters.</param>
            <param name="labelSetXml">Data to print.</param>
            <summary>
                Prints multiple labels with the same layout, but with different data.
            </summary>
            <remarks>
                Use this method to print multiple labels with the same layout, but with different data. For example, multiple addresses from an Address Book.
                Each label is printed as a page of the same print job. To specify the data to print, use <see cref="T:DYMO.Label.Framework.LabelSetBuilder" /> class.
                <para>
                    Another option for printing multiple labels is to use <see cref="T:DYMO.Label.Framework.IPrintJob"/>. IPrintJob can be created using <see cref="M:DYMO.Label.Framework.IPrinter.CreatePrintJob(DYMO.Label.Framework.IPrintParams)">IPrinter.CreatePrintJob</see>.
                </para>
            </remarks>
            <example>
                This sample prints three labels with text "label 1," "label 2," and  "label 3."
                <code>
                    <![CDATA[
        void PrintMultipleLabelsWithLabelSet()
        {
            // load label layout
            ILabel label = Label.Open("MyTextLabel.label");

            // create a label set
            LabelSetBuilder labelSetBuilder = new LabelSetBuilder();
            
            // populate label set with data for three labels
            // the code assumes that the label contains an object with reference name set to "TEXT"
            for (int i  = 1; i <= 3; ++i)
                labelSetBuilder.AddRecord().AddText("TEXT", string.Format("label {0}", i));

            // get a reference to first connected printer
            ILabelWriterPrinter printer = Framework.GetLabelWriterPrinters().First(p => p.IsConnected) as ILabelWriterPrinter;

            // print three labels with default printing parameters
            label.Print(printer, null, labelSetBuilder.Xml);
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.Print(System.String,DYMO.Label.Framework.IPrintParams,System.String)">
            <param name="printerName" >Printer to print to.</param>
            <param name="printParams">Print parameters.</param>
            <param name="labelSetXml">Data to print.</param>
            <summary>
                Prints multiple labels with the same layout, but with different data.
            </summary>
            <remarks>
                Use this method to print multiple labels with the same layout, but with different data. For example, multiple addresses from an Address Book.
                Each label is printed as a page of the same print job. To specify the data to print, use <see cref="T:DYMO.Label.Framework.LabelSetBuilder" /> class.
                <para>
                    Another option for printing multiple labels is to use <see cref="T:DYMO.Label.Framework.IPrintJob"/>. IPrintJob can be created using <see cref="M:DYMO.Label.Framework.IPrinter.CreatePrintJob(DYMO.Label.Framework.IPrintParams)">IPrinter.CreatePrintJob</see>.
                </para>
            </remarks>
            <example>
                See <see cref="M:DYMO.Label.Framework.ILabel.Print(DYMO.Label.Framework.IPrinter,DYMO.Label.Framework.IPrintParams,System.String)">Print</see>
                for an example.
        </example>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.RenderAsPng(DYMO.Label.Framework.IPrinter,DYMO.Label.Framework.ILabelRenderParams)">
            <param name="printer">Printer characteristics used to render the label preview.</param>
            <param name="renderParams">Rendering parameters.</param>
            <summary>Generates a preview image of the label.</summary>
            <returns>Byte-array of base64-encoded PNG stream.</returns>
            <remarks>
                This method can be used to display a label preview in an application.
                Specify the same <see cref="T:DYMO.Label.Framework.IPrinter"/> instance in <paramref name="printer"/> parameter as will
                later be used to print the label. It is important that these match because certain printer characteristics, such as printer resolution,
                printable area, and so on, are used to generate the label preview. Specifying different printers can result in an inaccurate preview.
                If <c>null</c> is specified for <paramref name="printer"/>, the first available printer the label can be printed to will be used to get
                the nessesary characteristics. If there is no such printer installed, the default characteristics will be used.
            </remarks>
            <example>
                The following example demonstrates how to create a label preview image and save to the image to a file.
                <code>
                    <![CDATA[
        void RenderAsPng()
        {
            // obtain a reference to ILabel by loading a label from a file
            ILabel label = Label.Open("MyLabel.label");

            // render using default printer and default parameters
            byte[] pngData = label.RenderAsPng(null, null);

            // save to file
            System.Drawing.Image.FromStream(new MemoryStream(pngData)).Save("MyLabelImage.png");
        }
                    ]]>
                </code>
            </example>
            <seealso cref="T:DYMO.Label.Framework.LabelRenderParams"/>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.SaveToFile(System.String)">
            <param name="fileName">File path to save label to.</param>
            <summary>Saves the label to a file.</summary>
            <remarks>Use this method to save the label to the filesystem.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.SaveToStream(System.IO.Stream)">
            <param name="stream">Stream to save label to.</param>
            <summary>Saves the label to a stream.</summary>
            <remarks>Use this method to save the label as something other than a file, for example, as a database or as a part of another file.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.SaveToXml">
            <summary>Saves the label to a string.</summary>
            <returns>String containing an XML representation of the label.</returns>
            <remarks>
                Use this method as a simple way of transfering a label. 
                For example, this method is the simplest way to implement undo/redo functionality.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.SetAddressText(System.Int32,System.String)">
            <param name="index">Zero-based index of an Address object on the label.</param>
            <param name="text">Address text to set.</param>
            <summary>Sets the address on the label.</summary>
            <remarks>
                Given an index of an Address object, places the text in the object. 
                The index is normally 0. However, for designs with multiple Address objects, the index can be greater than zero to enable selection of other Address objects.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.SetImagePngData(System.String,System.IO.Stream)">
            <param name="imageName">Name of the Image object to place image data into.</param>
            <param name="pngStream">Image data in PNG format.</param>
            <summary>Sets image data for the specified Image object.</summary>
            <remarks>Use this method to place an image on the label.</remarks>
            <example>
                The following example loads a company logo image from a file and places it into the Image object named "LOGO."
                <code>
                    <![CDATA[
        void SetImagePngData()
        {
            // obtain a reference to ILabel by loading a label from a file
            ILabel label = Label.Open("MyLogoLabel.label");

            // load image data from file
            using (FileStream pngStream = new FileStream("Logo.png", FileMode.Open, FileAccess.Read))
                label.SetImagePngData("LOGO", pngStream);
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.SetImageUri(System.String,System.String)">
            <param name="imageName">Name of the Image object to place image data into.</param>
            <param name="uri">URL to load image data from.</param>
            <summary>Sets image data for the specified Image object.</summary>
            <remarks>
                Use this method to place an image on the label. <paramref name="uri"/> can be a URL or a file name.
                <note type="caution">
                    This method blocks until all image data is received. Therefore, if <paramref name="uri"/> represents a network resource, there can be a significant
                    delay if the resource is currently unavailable or if the network connection is slow. To avoid blocking, use any asynchronous 
                    method to load the resource into memory and then call  <see cref="M:DYMO.Label.Framework.ILabel.SetImagePngData(System.String,System.IO.Stream)">SetImagePngData</see>.
                </note>
            </remarks>
            <example>
                <code>
                    <![CDATA[
        void SetImageUri()
        {
            ILabel label = Label.Open("MyLogoLabel.label");

            label.SetImageUri("LOGO", @"c:\Logo.bmp");
            label.SetImageUri("PHOTO", @"http://localhost/photo.jpg");
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.SetObjectText(System.String,System.String)">
            <param name="objectName">Object name to set text to.</param>
            <param name="text">Text to set.</param>
            <summary>Sets the text content of the object.</summary>
            <remarks>
                Given an object name and some text, changes the text of the object to have the new text. 
                This method can only set plain text without any formatting. To set formatted/styled text, create 
                <see cref="T:DYMO.Label.Framework.LabelSetBuilder"/> and then use 
                <see cref="M:DYMO.Label.Framework.ILabelRecordBuilder.AddStyledText(System.String,DYMO.Label.Framework.IStyledText)">AddStyledText</see>
                or <see cref="M:DYMO.Label.Framework.ILabelRecordBuilder.AddTextMarkup(System.String,System.String)">AddTextMarkup</see>.
            </remarks>
            <example>
                <code>
                    <![CDATA[
        void SetObjectTextAndPrint()
        {
            // obtain a reference to ILabel by loading a label from a file
            ILabel label = Label.Open("MyLabel.label");

            // set text
            label.SetObjectText("TEXT", "Some text");

            // print label
            label.Print("DYMO LabelWriter 450 Turbo");
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.ILabel.SetPostnetBarcodePosition(System.Int32,DYMO.Label.Framework.PostnetBarcodePosition)">
            <param name="index">Zero-based index of an Address object on the label.</param>
            <param name="position">Barcode position to set.</param>
            <summary>Sets the position of the Intelligent Mail barcode on an Address object.</summary>
            <remarks>
                Given the index of an Address object, changes the Intelligent Mail barcode setting for the object.
                The index is normally 0. However, for designs with multiple Address objects, the index can be greater than zero to enable selection of other Address objects.
            </remarks>
        </member>
        
        <member name="T:DYMO.Label.Framework.ILabelObject">
            <summary>Base interface for label objects.</summary>
            <remarks>
                <b>ILabelObject</b> is a base interface for all label object interfaces, such as <see cref="T:DYMO.Label.Framework.ITextObject"/> or
                <see cref="T:DYMO.Label.Framework.IBarcodeObject"/>, and provides properties and methods common for all object types.
            </remarks>
            <example>
                <code>
                    <![CDATA[
        void ObjectNames()
        {
            // open a label
            ILabel label = Label.Open("AllObjects.label");

            // enum object on the label and print their names to console
            foreach (ILabelObject obj in label.Objects)
                Console.WriteLine(obj.Name);
        }]]>
                </code>
            </example>
        </member>
        <member name="P:DYMO.Label.Framework.ILabelObject.Name">
            <summary>
                Object name.
            </summary>
            <remarks>
                Object name can be used to reference an object in methods that accept an object name as a parameter, such as 
                <see cref="M:DYMO.Label.Framework.ILabel.SetObjectText(System.String,System.String)">SetObjectText</see>.
                Another way to use object name is to link the data in one object to another object, such as <see cref="P:DYMO.Label.Framework.IBarcodeObject.LinkedObjectName"/>
                Object name is not restricted in any way. Any unicode character can be used in the name and the name length has no limit.
                However, it is good practice to use only alpha-numeric characters in object names and to keep object names fairly short.
                <note type="note">
                    Assigning a name is not required. It is acceptable to have an empty name (no name).
                </note>
                <note type="caution">
                    The Framework does not force label objects to have distinct names. It is the responsibility of the developer to ensure that object names are unique.
                    If two or more objects have the same name, the result of calling methods that accept object name as a parameter is undefined.
                </note>
            </remarks>
        </member>
        
        <member name="T:DYMO.Label.Framework.ILabelRenderParams">
            <summary>Specifies parameters used to create a label preview/image.</summary>
            <remarks>
                <b>ILabelRenderParams</b> controls how the label image is generated. 
                Use <see cref="T:DYMO.Label.Framework.LabelRenderParams"/> to create an instance of <b>ILabelRenderParams</b>.
            </remarks>
            <example>
                <code>
                    <![CDATA[
        void RenderLabelWithParams()
        {
            // load label from file
            ILabel label = Label.Open("MyLabel.label");

            // set data
            label.SetObjectText("Text", "42\n42 42 \n42 42 42");

            // specify render parameters
            ILabelRenderParams renderParams = new LabelRenderParams();
            renderParams.FlowDirection = FlowDirection.LeftToRight;
            renderParams.LabelColor = Colors.LightGray;
            renderParams.ShadowColor = Colors.DarkGray;
            renderParams.ShadowDepth = 3;
            renderParams.PngUseDisplayResolution = false;

            // render using default printer and default parameters
            byte[] pngData = label.RenderAsPng(null, renderParams);

            // save to file
            System.Drawing.Image.FromStream(new MemoryStream(pngData)).Save("RenderLabelWithParamsImage.png");
        }
                    ]]>
                </code>
                
                The resulting image is as follows:<br/> <img src="Images/RenderLabelWithParamsImage.png"/><br/>
                The same label, generated with <c>renderParams.PngUseDisplayResolution = true</c> is as follows:<br/> 
                <img src="Images/RenderLabelWithParamsImageDisplayResolution.png"/>
                
            </example>
        </member>
        <member name="P:DYMO.Label.Framework.ILabelRenderParams.FlowDirection">
            <summary>Specifies the direction of label content on the label.</summary>
            <remarks>
                Specifies the direction of the label content on the label.
                Specify <see cref="F:DYMO.Label.Framework.FlowDirection.LeftToRight"/> if the label contains text in Western languages, such as English or French.
                Specify <see cref="F:DYMO.Label.Framework.FlowDirection.RightToLeft"/> if the label contains text in Middle East languages, such as Arabic or Hebrew.
                For example, below are previews of the same label. The first is rendered as LeftToRight and the second as RightToLeft.

                <table border="1">
                    <tr>
                        <th>Left to Right</th>
                        <th>Right to Left</th>
                    </tr>
                    <tr>
                        <td>
                            <img src="Images/LeftToRightLabel.png"/>
                        </td>
                        <td>
                            <img src="Images/RightToLeftLabel.png"/>
                        </td>
                    </tr>
                </table>
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ILabelRenderParams.LabelColor">
            <summary>Specifies the label background color.</summary>
            <remarks>
                <b>LabelColor</b> specifies the color used to render the label background, usually White. 
                To specify the color, use one of <see cref="T:DYMO.Label.Framework.Color"/> constructors 
                or one of <see cref="T:DYMO.Label.Framework.Colors"/> predefined colors.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ILabelRenderParams.PngUseDisplayResolution">
            <summary>Specifies the resolution to use when generating the label image.</summary>
            <remarks>
                <b>PngUseDisplayResolution</b> is used to control the resolution/size of the generated label image. 
                Specify <c>true</c> to use the display resolution. Specify <c>false</c> to use the printer resolution.
                If the printer resolution is used, the image will be larger. 
                Usually display resolution is sufficient because the image is generated for display. 
                Use printer resolution if the label image will be zoomed. In this case, the larger image size will produce a better quality preview.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ILabelRenderParams.ShadowColor">
            <summary>Specifies the label shadow color.</summary>
            <remarks>
                <b>ShadowColor</b> specifies the color used to render the label shadow, usually Black or Gray.
                To specify the color, use one of <see cref="T:DYMO.Label.Framework.Color"/> constructors
                or one of <see cref="T:DYMO.Label.Framework.Colors"/> predefined colors.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ILabelRenderParams.ShadowDepth">
            <summary>Specifies the shadow width.</summary>
            <remarks>
                <b>ShadowDepth</b> specifies the shadow width in pixels.
                If <c>0</c> is specified, no shadow is rendered.
            </remarks>
        </member>
        <member name="T:DYMO.Label.Framework.ILabelSetBuilder">
            <summary>
                Provides an interface to build a label set.
            </summary>
            <remarks>
                <c>ILabelSetBuilder</c> provides a way to populate a label set. 
                A label set is similar to a database record set and is designed to simplify/unify printing of multiple labels.
                Each label set contains a collection of label records. Each label record contains the data to print on a single label.
                Each label record contains data for one or more label objects. Usually the data is text or address data, but the data can also be image data.
                Image data is specified as a base64-encoded png stream, see <see cref="Overload:DYMO.Label.Framework.ILabelRecordBuilder.AddImage">AddImage</see>.
                Text data can be specified as a plain string without any formatting (see <see cref="M:DYMO.Label.Framework.ILabelRecordBuilder.AddText(System.String,System.String)">AddText</see>)
                or as a styled (formatted) string containing font, font size, font size information per character basis.
                Text formatting can be specified using method calls (see <see cref="M:DYMO.Label.Framework.ILabelRecordBuilder.AddStyledText(System.String,DYMO.Label.Framework.IStyledText)">AddStyledText</see>)
                or using XML (see <see cref="M:DYMO.Label.Framework.ILabelRecordBuilder.AddTextMarkup(System.String,System.String)">AddTextMarkup</see>).
            </remarks>
            <example>
                The following example prints three labels by populating three records in a label set. The output is as follows:<br/>
                <div style="background-color:#e0e0e0;">
                    <img src="Images/PrintWithLabelSet1.png" style="margin:3px;"/>
                    <img src="Images/PrintWithLabelSet2.png" style="margin:3px;"/>
                    <img src="Images/PrintWithLabelSet2.png" style="margin:3px;"/>
                </div>
                <code>
                    <![CDATA[
        public void PrintWithLabelSet()
        {
            // open a label
            ILabel label = Label.Open("TextLabel.label");

            // create a builder object to populate label set 
            ILabelSetBuilder labelSetBuilder = new LabelSetBuilder();
            
            // label #1 - use font specified in the label file
            ILabelRecordBuilder record = labelSetBuilder.AddRecord();
            record.AddText("TEXT", "6x7=42");

            // label #2 - specify font programmatically using StyledTextBuilder
            record = labelSetBuilder.AddRecord();
            IStyledTextBuilder styledTextBuilder = new StyledTextBuilder();
            styledTextBuilder.Append(new StyledTextBlock("6x7=", new FontInfo("Courier New", 36, FontStyle.None), Colors.Black));
            styledTextBuilder.Append(new StyledTextBlock("42", new FontInfo("Courier New", 36, FontStyle.Bold), Colors.Black));
            record.AddStyledText("TEXT", styledTextBuilder.StyledText);

            // label #3 - specify font using a markup string
            record = labelSetBuilder.AddRecord();
            record.AddTextMarkup("TEXT", @"<font family='Courier New' size='36'>6x7=<b>42</b></font>");

            label.Print("DYMO LabelWriter 450 Turbo", null, labelSetBuilder.Xml);
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.ILabelSetBuilder.AddRecord">
            <summary>
                Adds a new empty record to the label set.
            </summary>
            <returns>
                <see cref="T:DYMO.Label.Framework.ILabelRecordBuilder"/> object to put data for individual objects in the record.
            </returns>
        </member>
        <member name="P:DYMO.Label.Framework.ILabelSetBuilder.Xml">
            <summary>
                Gets XML representation of the label set.
            </summary>
            <remarks>
                Pass the value of the property to <see cref="Overload:DYMO.Label.Framework.ILabel.Print">Print</see> methods that accept label set data in XML format.
            </remarks>
        </member>

        <member name="T:DYMO.Label.Framework.ILabelRecordBuilder">
            <summary>
                Represents a label set record.
            </summary>
            <remarks>
                <b>ILabelRecordBuilder</b> provides the ability to set data for multiple label objects that will be printed on the same label.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.ILabelRecordBuilder.AddImage(System.String,System.IO.Stream)">
            <param name="objectName">Name of the Image object that the image is assigned to.</param>
            <param name="pngStream">Image data stream.</param>
            <summary>
                Adds image data.
            </summary>
            <returns>
                Self-reference.
            </returns>
            <remarks>
                Use this method to set an image object with the data specified in <see cref="T:System.IO.Stream"/>. 
                The object specified in <paramref name="objectname"/> parameter is expected to be an Image object.
                <note type="note">
                    The <see cref="T:System.IO.Stream"/> object specified in <paramref name="pngStream"/> is not required to contain PNG data.
                    The object can contain other bitmap data as well, such as BMP or JPG.
                </note>
            </remarks>
            <example>
                The following example prints one label for each DataRow passed as a parameter. The example assumes that there are two objects on the label,
                a Text object named "VisitorName" and an Image object named "VisitorPhoto." A DataRow is expected to have two fields, one text field named "VisitorName"
                and a BLOB field named "VisitorPhoto" thats value is returned as byte array.
                <code>
                    <![CDATA[
        public void PrintFromDatabase(IEnumerable<DataRow> rows)
        {
            ILabel label = Label.Open("Visitor.label");

            ILabelSetBuilder labelSetBuilder = new LabelSetBuilder();
            foreach (var row in rows)
            {
                // for each data row add new label record
                ILabelRecordBuilder recordBuilder = labelSetBuilder.AddRecord();

                // set visitor name
                recordBuilder.AddText("VisitorName", row["VisitorName"].ToString());

                // set visitor photo
                recordBuilder.AddImage("VisitorPhoto", new MemoryStream(row["VisitorPhoto"] as byte[]));
            }

            label.Print("DYMO LabelWriter 450 Turbo", null, labelSetBuilder.Xml);
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.ILabelRecordBuilder.AddImage(System.String,System.String)">
            <param name="objectName">Name of the Image object the image is assigned to.</param>
            <param name="imageUri">Uri of image file.</param>
            <summary>
                Adds image data.
            </summary>
            <returns>
                Self-reference.
            </returns>
            <remarks>
                Use this method to load data for the Image object from a resource specified in <paramref name="imageUri"/> parameter.
                The object specified in <paramref name="objectname"/> parameter is expected to be an Image object.
                <note type="note">
                    The resource specified in <paramref name="imageUri"/> is not required to contain PNG data.
                    The resource can contain other bitmap data as well, such as BMP or JPG.
                </note>

                <note type="caution">
                    The image resource is requested and converted into internal format upon the method call.
                    Therefore, the record contains the image data itself, not a link to the original Uri.
                </note>
            </remarks>
            <example>
                <code>
                    <![CDATA[
        void PrintVisitorLabels()
        {
            ILabel label = Label.Open("Visitor.label");

            ILabelSetBuilder labelSetBuilder = new LabelSetBuilder();

            // record #1
            labelSetBuilder.AddRecord()
                .AddText("VisitorName", "Vladimir Buzuev")
                .AddImage("VisitorPhoto", "Vladimir.jpg");

            // record #2
            labelSetBuilder.AddRecord()
                .AddText("VisitorName", "Anna Buzueva")
                .AddImage("VisitorPhoto", "Anna.png");

            label.Print("DYMO LabelWriter 450 Turbo", null, labelSetBuilder.Xml);
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.ILabelRecordBuilder.AddStyledText(System.String,DYMO.Label.Framework.IStyledText)">
            <param name="objectName">Name of the label object the text is assigned to.</param>
            <param name="styledText">Formatted (styled) text to set.</param>
            <summary>
                Adds formatted (styled) text.
            </summary>
            <returns>
                Self-reference.
            </returns>

            <remarks>
                <b>AddStyledText</b> is one one of two methods used to set formatted (styled) text for an object. 
                (The other is <see cref="M:DYMO.Label.Framework.ILabelRecordBuilder.AddTextMarkup(System.String,System.String)">AddTextMarkup</see>.) 
                Formatting includes font name, size, style, and so on. 
                Use <see cref="T:DYMO.Label.Framework.IStyledTextBuilder"/> to construct <paramref name="styledText"/>.
            </remarks>
            <example>
                <code>
                    <![CDATA[
        IStyledText FormatLines(string text)
        {
            var styledTextBuilder = new StyledTextBuilder();

            // start with this font size and increment it by 10 for each line
            double fontSize = 10;
            
            // separate text by lines
            foreach (var line in text.Split('\n'))
            {
                // append a new line for a previous line
                if (fontSize > 10)
                    styledTextBuilder.Append(new StyledTextBlock(Environment.NewLine, new FontInfo("Arial", fontSize - 10, FontStyle.Bold | FontStyle.Italic), Colors.Black));

                // append current line
                styledTextBuilder.Append(line.Trim('\n', '\r'), new FontInfo("Arial", fontSize, FontStyle.Bold | FontStyle.Italic), Colors.Black);

                fontSize += 10;
            }

            return styledTextBuilder.StyledText;
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.ILabelRecordBuilder.AddText(System.String,System.String)">
            <param name="objectName">Name of the label object the text is assigned to.</param>
            <param name="text">Text to assign.</param>
            <summary>
                Adds plain text.
            </summary>
            <returns>
                Self reference.
            </returns>

            <remarks>
                Use this method to set object content when content formatting is not supported (for example, for a Barcode object) or when content formatting is not needed.
                If the object supports content formatting, the default formatting is applied.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.ILabelRecordBuilder.AddTextMarkup(System.String,System.String)">
            <param name="objectName">Name of the label object the text is assigned to.</param>
            <param name="textMarkup">Text to assign, encoded using markup string.</param>
            <summary>
                Adds formatted (styled) text, represented by a markup string.
            </summary>
            <returns>
                Self reference.
            </returns>

            <remarks>
                <b>AddTextMarkup</b> is one of two methods used to set formatted (styled) text for an object.
                (The other is <see cref="M:DYMO.Label.Framework.ILabelRecordBuilder.AddStyledText(System.String,DYMO.Label.Framework.IStyledText)">AddStyledText</see>.)
                This method specifies the formatting using simple XML strings (versus API method calls used in <see cref="M:DYMO.Label.Framework.ILabelRecordBuilder.AddStyledText(System.String,DYMO.Label.Framework.IStyledText)">AddStyledText</see>).
                This may be simpler (easier to understand and maintain) in some cases. See TextMarkup.xsd for complete XML schema definition.  
                
                <note type="caution">
                    Formatting mistakes are more common with this method because the format is specified as a string. If the markup is invalid, an exeption will be raised only at
                    run time, not at compile time.
                </note>
            </remarks>

            <example>
                <code>
                    <![CDATA[
        public void SetTextMarkup()
        {
            // open a label
            ILabel label = Label.Open("TextLabel.label");

            // create a builder object to populate label set 
            ILabelSetBuilder labelSetBuilder = new LabelSetBuilder();

            // label #1
            var record = labelSetBuilder.AddRecord();
            record.AddTextMarkup("TEXT", @"<font family='Courier New' size='36'>6x7=<b>42</b></font>");

            //label #2
            labelSetBuilder.AddRecord()
                .AddTextMarkup("TEXT", @"<font family='Arial' size='36'>6x7=<b>42</b></font>");

            label.Print("DYMO LabelWriter 450 Turbo", null, labelSetBuilder.Xml);
        }
                    ]]>
                </code>
            </example>
        </member>

        <member name="T:DYMO.Label.Framework.ILabelWriterPrinter">
            <summary>Specifies properties specific to LabelWriter printers.</summary>
            <remarks>
                <see cref="T:DYMO.Label.Framework.ILabelWriterPrinter"/> specifies properties specific to LabelWriter printers.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ILabelWriterPrinter.IsTwinTurbo">
            <summary>Indicates whether or not the printer is a Twin Turbo printer.</summary>
            <remarks>
                Returns true if the printer is a Twin Turbo printer, such as "DYMO LabelWriter Twin Turbo" or "DYMO LabelWriter 450 Twin Turbo."
                Returns false if the printer is not a Twin Turbo printer.
            </remarks>
        </member>
        <member name="T:DYMO.Label.Framework.ILabelWriterPrintParams">
            <summary>Print parameters for printing to LabelWriter printers.</summary>
            <remarks>
                This interface specifies print parameters to use with <see cref="T:DYMO.Label.Framework.ILabelWriterPrinter"/> printers.
                Use <see cref="T:DYMO.Label.Framework.LabelWriterPrintParams"/> to create an instance of <c>ILabelWriterPrintParams</c>.
            </remarks>
            <example>
                The following example prints two labels, one to the left roll and one to the right roll. Both labels print using BarcodeAndGraphics print quality.
                <code>
                    <![CDATA[
        void PrintWithLabelWriterPrintParams()
        {
            // open label layout
            ILabel label = Label.Open("TextLabel.label");

            // create printing parameters
            LabelWriterPrintParams printParams = new LabelWriterPrintParams();
            printParams.PrintQuality = LabelWriterPrintQuality.BarcodeAndGraphics;

            // print on left roll
            label.SetObjectText("TEXT", "Left");
            printParams.RollSelection = RollSelection.Left;
            label.Print("DYMO LabelWriter Twin Turbo", printParams);

            // print on right roll
            label.SetObjectText("TEXT", "Right");
            printParams.RollSelection = RollSelection.Right;
            label.Print("DYMO LabelWriter Twin Turbo", printParams);
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="P:DYMO.Label.Framework.ILabelWriterPrintParams.PrintQuality">
            <summary>Gets or sets print quality setting.</summary>
            <remarks>Indicates the print quality setting. The default value is <see cref="F:DYMO.Label.Framework.LabelWriterPrintQuality.Auto"/>.
        </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ILabelWriterPrintParams.RollSelection">
            <summary>Gets or sets the label roll to print to.</summary>
            <remarks>Indicates the roll to print to if the printer is a Twin Turbo printer. This parameter is not used if the printer is not a Twin Turbo printer.
            The default value is <see cref="F:DYMO.Label.Framework.RollSelection.Auto"/>.
        </remarks>
        </member>
        
        <member name="T:DYMO.Label.Framework.ImageObject">
            <summary>Represents an Image label object.</summary>
            <inhertdoc cref="T:DYMO.Label.Framework.IImageObject"/>
        </member>
        <member name="M:DYMO.Label.Framework.ImageObject.#ctor">
            <summary>Creates ImageObject using default properties.</summary>
        </member>
        <member name="M:DYMO.Label.Framework.ImageObject.#ctor(System.String,System.IO.Stream)">
            <param name="name">Object name.</param>
            <param name="imageData">Stream containing image data.</param>
            <summary>Creates ImageObject using specified name and image data.</summary>
            <remarks>The imageData stream can contain image data in any format supported by DYMO Label software; the stream does not need to contain image data in PNG format.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ImageObject.BorderColor">
            <inheritdoc cref="P:DYMO.Label.Framework.IImageObject.BorderColor"/>
        </member>
        <member name="P:DYMO.Label.Framework.ImageObject.BorderWidth">
            <inheritdoc cref="P:DYMO.Label.Framework.IImageObject.BorderWidth"/>
        </member>
        <member name="P:DYMO.Label.Framework.ImageObject.HorizontalAlignment">
            <inheritdoc cref="P:DYMO.Label.Framework.IImageObject.HorizontalAlignment"/>
        </member>
        <member name="P:DYMO.Label.Framework.ImageObject.ImagePngData">
            <inheritdoc cref="P:DYMO.Label.Framework.IImageObject.ImagePngData"/>
        </member>
        <member name="P:DYMO.Label.Framework.ImageObject.ImagePngDataBase64">
            <inheritdoc cref="P:DYMO.Label.Framework.IImageObject.ImagePngDataBase64"/>
        </member>
        <member name="M:DYMO.Label.Framework.ImageObject.LoadFromFile(System.String)">
            <inheritdoc cref="M:DYMO.Label.Framework.IImageObject.LoadFromFile(System.String)"/>
        </member>
        <member name="M:DYMO.Label.Framework.ImageObject.LoadFromUri(System.String)">
            <inheritdoc cref="M:DYMO.Label.Framework.IImageObject.LoadFromUri(System.String)"/>
        </member>
        <member name="P:DYMO.Label.Framework.ImageObject.Rotation">
            <inheritdoc cref="P:DYMO.Label.Framework.IImageObject.Rotation"/>
        </member>
        <member name="P:DYMO.Label.Framework.ImageObject.ScaleMode">
            <inheritdoc cref="P:DYMO.Label.Framework.IImageObject.ScaleMode"/>
        </member>
        <member name="P:DYMO.Label.Framework.ImageObject.VerticalAlignment">
            <inheritdoc cref="P:DYMO.Label.Framework.IImageObject.VerticalAlignment"/>
        </member>
        <member name="T:DYMO.Label.Framework.ImageScaleMode">
            <summary>Specifies the image scaling mode.</summary>
        </member>
        
        <member name="F:DYMO.Label.Framework.ImageScaleMode.Fill">
            <summary>
                Scales the image to fill all available space without preserving aspect ratio.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ImageScaleMode.None">
            <summary>
                Does not scale the image.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ImageScaleMode.Uniform">
            <summary>
                Scales the image to fill as much available space as possible while preserving aspect ratio.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.IPrinter">
            <summary>Provides interface to common properties of all supported printers.</summary>
            <remarks>
                Use this interface to obtain properties, such as printer name, driver name, printer status, and so on.
                For model specific properties, such whether or not the printer supports the auto-cut feature or whether or not the printer is a TwinTurbo printer,
                use <see cref="T:DYMO.Label.Framework.ILabelWriterPrinter"/> and/or <see cref="T:DYMO.Label.Framework.ITapePrinter"/>.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IPrinter.CreatePrintJob(DYMO.Label.Framework.IPrintParams)">
            <param name="printParams">Print parameters.</param>
            <summary>
                Prints multiple labels with different layouts or multiple labels with the same layout, but with different data, in a single print job.
            </summary>
            <returns>
                <see cref="T:DYMO.Label.Framework.IPrintJob"/> object used to print labels. 
            </returns>
            <remarks>
                This method creates a <see cref="T:DYMO.Label.Framework.IPrintJob"/> object used to print multiple labels.
                See <see cref="T:DYMO.Label.Framework.IPrintJob"/> for an example.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IPrinter.IsConnected">
            <summary>Gets printer status.</summary>
            <remarks>
                Returns printer status. Returns true if the printer is connected to the computer. Returns false if the printer is not connected to the computer.
                <note type="caution">Currently only returns properly for local USB-connected printers.</note>
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IPrinter.IsLocal">
            <summary>Gets printer connection type.</summary>
            <remarks>
                Returns printer connection type. Returns true if the printer is locally connected (through USB) or is connected using
                a printer server. Returns false if the printer is a network shared printer.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IPrinter.ModelName">
            <summary>Gets printer model name.</summary>
            <remarks>
                Returns model (driver) name for a printer. 
                If multiple printers of the same model type are installed, this may be different from <see cref="P:DYMO.Label.Framework.IPrinter.Name"/>.
                For example, if two DYMO LabelWriter 450 printers are installed, the <see cref="P:DYMO.Label.Framework.IPrinter.ModelName"/> will be "DYMO LabelWriter 450" for both printers.
                However, <see cref="P:DYMO.Label.Framework.IPrinter.Name"/> will be different for each printer; for example,
                "DYMO LabelWriter 450 (Copy 1)" and "DYMO LabelWriter 450 (Copy 2)."
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IPrinter.Name">
            <summary>Gets printer name.</summary>
            <remarks>
                Returns printer name.
                If multiple printers of the same model type are installed, this may be different from <see cref="P:DYMO.Label.Framework.IPrinter.ModelName"/>.
                For example, if two DYMO LabelWriter 450 printers are installed, the <see cref="P:DYMO.Label.Framework.IPrinter.ModelName"/> will be "DYMO LabelWriter 450" for both printers.
                However, <see cref="P:DYMO.Label.Framework.IPrinter.Name"/> will be different for each printer; for example,
                "DYMO LabelWriter 450 (Copy 1)" and "DYMO LabelWriter 450 (Copy 2)."
            </remarks>
        </member>
        
        <member name="T:DYMO.Label.Framework.IPrinters">
            <summary>Enumerates available printers.</summary>
            <remarks>
                <see cref="T:DYMO.Label.Framework.IPrinters"/> provides a way to enumerate installed printers and get the corresponding
                <see cref="T:DYMO.Label.Framework.IPrinter"/> by name.<br/>
                Use <see cref="T:DYMO.Label.Framework.Printers"/> to get a list of all installed printers.<br/>
                Use <see cref="M:DYMO.Label.Framework.Framework.GetLabelWriterPrinters">GetLabelWriterPrinters</see> to get a list of all installed LabelWriter printers only.<br/>
                Use <see cref="M:DYMO.Label.Framework.Framework.GetTapePrinters">GetTapePrinters</see> to get a list of all installed Tape printers only.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IPrinters.GetPrinterByName(System.String)">
            <param name="printerName">Printer name.</param>
            <summary>Gets printer by specified name.</summary>
            <returns>
                <see cref="T:DYMO.Label.Framework.IPrinter"/> of the installed printer with specified <paramRef name="printerName"/>.
            </returns>
            <remarks>Returns <see cref="T:DYMO.Label.Framework.IPrinter"/> by specified printer name. </remarks>
            <exeption cref="System.InvalidOperationException">
                Thrown when the printer with the specified name is not found.
            </exeption>
        </member>
        <member name="M:DYMO.Label.Framework.IPrinters.Contains(System.String)">
            <param name="printerName">Printer name.</param>
            <summary>Indicates whether or not the printer with the specified name exists.</summary>
            <returns>
                True, if the printer with the specified name exists. False, if the printer with the specified name does not exist.
            </returns>
        </member>
        <member name="P:DYMO.Label.Framework.IPrinters.Item(System.String)">
            <param name="printerName">Printer name</param>
            <summary>Gets printer by specified name.</summary>
            <remarks>
                Returns <see cref="T:DYMO.Label.Framework.IPrinter"/> by specified printer name.
            </remarks>
            <exeption cref="System.InvalidOperationException">
                Thrown when the printer with the specified name is not found.
            </exeption>
        </member>
        <member name="T:DYMO.Label.Framework.IPrintJob">
            <summary>Allows printing of multiple labels with different layouts in a single print job.</summary>
            <remarks>
                Use this interface to print multiple labels with different layouts in a single print job.
                It may be important to print multiple labels in a single print job to avoid initialization penalties for particular printer models.
                For example, LabelWriter 400/450 printers retract the label roll slightly at the beginning of each print job.
                Printing multiple labels in a single print job allows for faster label printing.
                Use <see cref="M:DYMO.Label.Framework.IPrinter.CreatePrintJob(DYMO.Label.Framework.IPrintParams)">CreatePrintJob</see> to create a print job.
                <note type="tip">
                    Use <c>IPrintJob</c> only to print multiple labels with different layouts, such as two different address labels.
                    To print labels with same layout, but different data, use
                    <see cref="M:DYMO.Label.Framework.ILabel.Print(DYMO.Label.Framework.IPrinter,DYMO.Label.Framework.IPrintParams,System.String)">Print</see>
                    and <see cref="T:DYMO.Label.Framework.LabelSetBuilder"/>.
                </note>
            </remarks>
            <example>
                The following example prints four labels. The first three use the same layout, and the fourth uses a different layout. 
                <code>
                    <![CDATA[
        public void PrintLabelUsingPrintJob()
        {
            // get a reference to first connected printer
            ILabelWriterPrinter printer = Framework.GetLabelWriterPrinters().First(p => p.IsConnected) as ILabelWriterPrinter;

            // create print job with default params
            IPrintJob printJob = printer.CreatePrintJob(null);

            // open first label layout
            ILabel label1 = Label.Open("TextLabel.label");

            // print three labels using label from TextLabel1.label
            for (int i = 1; i <= 3; ++i)
            {
                // set label content
                label1.SetObjectText("TEXT", string.Format("label {0}", i));
                // print label
                printJob.AddLabel(label1);
            }

            // open different label layout
            ILabel label2 = Label.Open("PartNumberLabel.label");
            // set label content ...
            label2.SetObjectText("BARCODE", "12345");
            // ... and print it 
            printJob.AddLabel(label2);

            // send labels to print spooler
            printJob.Print();
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.IPrintJob.AddLabel(DYMO.Label.Framework.ILabel)">
            <param name="label">Label to print.</param>
            <summary>Schedules a label to print.</summary>
            <remarks>
                Call this method when a label is ready to print (when the label contains all nessesary content).
                Note that the label will not print immediately (this behavior is different from DLS7 SDK behavior). 
                Instead, a 'snapshot' of the label is created. Therefore, setting different content using the same label object 
                will not 'overwrite' the previous content. After setting all the content, <see cref="M:DYMO.Label.Framework.IPrintJob.Print"/> must be called
                in order to send all the labels to the print spooler.
            </remarks>
            <example>
                <code>
                    <![CDATA[
        public void AddLabelToPrintJob()
        {
            // print to "DYMO LabelWriter 450" printer
            IPrinter printer = new Printers()["DYMO LabelWriter 450"];

            // create print job with default params
            IPrintJob printJob = printer.CreatePrintJob(null);

            // open first label layout
            ILabel label = Label.Open("TextLabel.label");

            // set some text/content
            label.SetObjectText("TEXT", "42");
            printJob.AddLabel(label);

            // set different text/content. It is OK to use the same 'label' variable
            label.SetObjectText("TEXT", "Some other text");
            printJob.AddLabel(label);

            // It is important to call Print. Otherwise no labels at all will be printed 
            printJob.Print();
        }
                    ]]>
                </code>
            </example>
            
        </member>
        <member name="M:DYMO.Label.Framework.IPrintJob.Print">
            <summary>Prints all the labels in a print job.</summary>
            <remarks>
                Call this method as the last step for printing multiple labels. Upon calling this method, an operating system print job is created and 
                all the labels scheduled for printing using <see cref="M:DYMO.Label.Framework.IPrintJob.AddLabel(DYMO.Label.Framework.ILabel)">AddLabel</see> are sent to the print spooler.
                <note type="important">No labels will print if a call to this method is missed.</note>
            </remarks>
        </member>
        
        <member name="T:DYMO.Label.Framework.IPrintParams">
            <summary>Basic print parameters.</summary>
            <remarks>
                <see cref="T:DYMO.Label.Framework.IPrintParams"/> is a base class for printer specific print parameters, such as 
                <see cref="T:DYMO.Label.Framework.ILabelWriterPrintParams"/> and <see cref="T:DYMO.Label.Framework.ITapePrintParams"/>.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IPrintParams.Copies">
            <summary>Gets or sets number of copies to print.</summary>
            <remarks>Indicates the number of copies to print. The default value is 1.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IPrintParams.FlowDirection">
            <summary>Gets or sets direction of label content on the label.</summary>
            <remarks>
                Indicates the direction of the label content on the label. 
                Specify <see cref="F:DYMO.Label.Framework.FlowDirection.LeftToRight"/> if the label contains text in Western languages, such as English or French.
                Specify <see cref="F:DYMO.Label.Framework.FlowDirection.RightToLeft"/> if the label contains text in Middle East languages, such as Arabic or Hebrew.
                For example, below are previews of the same label. The first is printed as LeftToRight and the second as RightToLeft.

                <table border="1">
                    <tr>
                        <th>Left to Right</th>
                        <th>Right to Left</th>
                    </tr>
                    <tr>
                        <td>
                            <img src="Images/LeftToRightLabel.png"/>
                        </td>
                        <td>
                            <img src="Images/RightToLeftLabel.png"/>
                        </td>
                    </tr>
                </table>
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IPrintParams.JobTitle">
            <summary>Gets or sets the print job title.</summary>
            <remarks>Indicates the print job title as displayed in the print spooler.</remarks>
        </member>
        
        <member name="T:DYMO.Label.Framework.IRect">
            <summary>Specifies a rectangle.</summary>
            <remarks></remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IRect.Height">
            <summary>Rectangle height.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IRect.Width">
            <summary>Rectangle width.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IRect.X">
            <summary>Rectangle x-coordinate.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IRect.Y">
            <summary>Rectangle y-coordinate.</summary>
        </member>

        <member name="T:DYMO.Label.Framework.IShapeObject">
            <summary>An interface to Shape label object.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IShapeObject.FillColor">
            <summary>Gets or sets the color used to render the interior of the Shape object.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IShapeObject.LineWidth">
            <summary>Gets or sets the width of the Shape object border.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IShapeObject.ShapeType">
            <summary>Gets or sets the Shape object figure; Rectangle, Ellipse, and so on.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IShapeObject.StrokeColor">
            <summary>Gets or sets the color used to render the Shape object border.</summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.IStyledText">
            <summary>Provides access to formatted (styled) text.</summary>
            <remarks>
                Using IStyledText, it is possible to obtain information about text formating, such as font size, style, and so on.
                IStyledText is immutable, it is not possible to use IStyledText to change text formatting.
                To change or create new formatting, use <see cref="T:DYMO.Label.Framework.StyledTextBuilder"/>.
            </remarks>
            <seealso cref="T:DYMO.Label.Framework.IStyledTextBuilder"/>
            <seealso cref="T:DYMO.Label.Framework.StyledTextBuilder"/>
        </member>
        <member name="P:DYMO.Label.Framework.IStyledText.Text">
            <summary>Gets plain text without formatting.</summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.IStyledTextBlock">
            <summary>Provides information about a block of text with the same formatting throughout.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IStyledTextBlock.Font">
            <summary>Gets block text font.</summary>
            <remarks>
                Returns <see cref="T:DYMO.Label.Framework.IFontInfo"/> describing font attributes of the block, such as font family, font size, and font style.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IStyledTextBlock.Text">
            <summary>Gets block text.</summary>
            <remarks>
                Returns <see cref="T:System.String"/> containing block text without formatting.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IStyledTextBlock.TextColor">
            <summary>Gets text color.</summary>
            <remarks>
                Returns <see cref="T:DYMO.Label.Framework.IColor"/> describing the block text (foreground) color.
            </remarks>
        </member>
        
        <member name="T:DYMO.Label.Framework.IStyledTextBuilder">
            <summary>Allows construction of formatted (styled) text.
        </summary>
            <remarks>
                Use <b>IStyledTextBuilder</b> to construct <see cref="T:DYMO.Label.Framework.IStyledText"/> to specify formatted (styled) text.
                <see cref="T:DYMO.Label.Framework.StyledTextBuilder"/> implements the interface.
            </remarks>
            <example>
                The following example formats passed text on a line-by-line basis. Each line uses bold and italic font styles. The font size increases by  
                10 points from one line to the next.
                <code>
                    <![CDATA[
        IStyledText FormatLines(string text)
        {
            var styledTextBuilder = new StyledTextBuilder();

            // start with this font size and increment it by 10 for each line
            double fontSize = 10;
            
            // separate text by lines
            foreach (var line in text.Split(Environment.NewLine.ToCharArray()))
            {
                // append a new line for a previous line
                if (fontSize > 10)
                    styledTextBuilder.Append(new StyledTextBlock(Environment.NewLine, new FontInfo("Arial", fontSize - 10, FontStyle.Bold | FontStyle.Italic), Colors.Black));

                // append current line
                styledTextBuilder.Append(line, new FontInfo("Arial", fontSize, FontStyle.Bold | FontStyle.Italic), Colors.Black);

                fontSize += 10;
            }

            return styledTextBuilder.StyledText;
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.IStyledTextBuilder.Append(DYMO.Label.Framework.IStyledTextBlock)">
            <param name="block">Text block to add.</param>
            <summary>Adds a block of formatted text.</summary>
            <returns>Self reference.</returns>
            <remarks>
                <b>Append</b> adds <see cref="T:DYMO.Label.Framework.IStyledTextBlock"/> to the builder content. 
                It is acceptable to add different text fragments with the same style multiple times; 
                <see cref="T:DYMO.Label.Framework.IStyledTextBuilder"/> will combine the fragments into one bigger block.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.IStyledTextBuilder.Append(System.String,DYMO.Label.Framework.IFontInfo,DYMO.Label.Framework.IColor)">
            <param name="text">Text to add.</param>
            <param name="font">Text font.</param>
            <param name="textColor">Text (foreground) color.</param>
            <summary>Adds formatted text.</summary>
            <returns>Self reference.</returns>
            <remarks>
                <b>Append</b> adds text with specified formatting to the builder content.
                It is acceptable to add different text fragments with same formatting multiple times,
                <see cref="T:DYMO.Label.Framework.IStyledTextBuilder"/> will combine the fragments into one bigger block.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IStyledTextBuilder.StyledText">
            <summary>Gets formatted text.</summary>
            <remarks>
                Returns <see cref="T:DYMO.Label.Framework.IStyledText"/> of the builder content.
                Use this property after construction of the builder content is complete in order to pass it to any method
                expecting <see cref="T:DYMO.Label.Framework.IStyledText"/> as a parameter.
            </remarks>
        </member>
        
        <member name="T:DYMO.Label.Framework.ITapePrinter">
            <summary>
                Provides properties specific to a Tape printer, such as "DYMO LabelMANAGER PC II."
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ITapePrinter.IsAutoCutSupported">
            <summary>
                Indicates whether or not the auto-cut feature is supported by the printer. For example, the auto-cut feature is supported by
                'DYMO LabelMANAGER 450' and not supported by "DYMO LabelMANAGER PC II."
            </summary>
        </member>

        <member name="T:DYMO.Label.Framework.ITapePrintParams">
            <summary>Print parameters for Tape printers.</summary>
            <remarks>
                Specifies print parameters used to print to <see cref="T:DYMO.Label.Framework.ITapePrinter"/> printers.
                Use <see cref="T:DYMO.Label.Framework.TapePrintParams"/> to create an instance of <c>ITapePrintParams</c>.
            </remarks>
            <example>
                The following example prints three copies of the same label. Each label is separated by chain marks.
                <code>
                    <![CDATA[
        void PrintWithTapePrintParams()
        {
            // open label layout
            ILabel label = Label.Open("19mm-Text.label");

            // create printing parameters
            TapePrintParams printParams = new TapePrintParams();
            printParams.TapeCutMode = TapeCutMode.ChainMarks;
            printParams.Copies = 3;

            // print
            label.SetObjectText("Text", "Some Text");
            label.Print("DYMO LabelWriter DUO Tape 128", printParams);
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="P:DYMO.Label.Framework.ITapePrintParams.TapeAlignment">
            <summary>Gets tape alignment.</summary>
            <remarks>
                Returns tape alignment to use for printing.
                The default value is <see cref="F:DYMO.Label.Framework.TapeAlignment.Center"/>. 
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ITapePrintParams.TapeCutMode">
            <summary>Gets tape cut mode.</summary>
            <remarks>
                Returns tape cut mode to use for printing. This property is ignored if the printer does not support the auto-cut feature.
                The default value is <see cref="F:DYMO.Label.Framework.TapeCutMode.AutoCut"/>.
            </remarks>
        </member>
        
        <member name="T:DYMO.Label.Framework.ITextObject">
            <summary>
                Interface to Text label object.
            </summary>
            <remarks>Text object displays text data.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ITextObject.BackgroundColor">
            <summary>
                Specifies the object background color.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ITextObject.FitMode">
            <summary>
                Specifies how text is scaled relative to the size of the object.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ITextObject.HorizontalAlignment">
            <summary>
                Specifies the horizontal alignment of the object.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ITextObject.IsMirrored">
            <summary>
                Specifies whether or not the object content is mirrored on the label.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ITextObject.LineCount">
            <summary>
                Returns the number of lines in the address data. Can be used with <see cref="M:DYMO.Label.Framework.ITextObject.SetLineFont(System.Int32,DYMO.Label.Framework.IFontInfo)">SetLineFont</see> to specify line-by-line address formatting.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ITextObject.Rotation">
            <summary>
                Specifies the rotation of the object: 0, 90, 180, or 270 degrees.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.ITextObject.SetLineFont(System.Int32,DYMO.Label.Framework.IFontInfo)">
            <param name="lineNo">Zero-based index of the line to set formatting for.</param>
            <param name="fontInfo">Formatting information, such as font name, size, and style.</param>
            <summary>
                Sets the font formatting for the specified line of address data.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ITextObject.StyledText">
            <summary>
                Object text, specified as an object that provides methods for manipulating text content.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ITextObject.Text">
            <summary>
                Object text, specified as a plain text string without any formatting.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ITextObject.TextColor">
            <summary>
                Specifies the color of the object text.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ITextObject.TextMarkup">
            <summary>
                Object address, specified as an XML string with formatting attributes for font name, font size, and so on.
            </summary>
            <remarks>See TextMarkup.xsd for XML schema definition.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.ITextObject.VerticalAlignment">
            <summary>
                Specifies the vertical alignment of the object.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.ITextObject.Verticalized">
            <summary>Specifies the direction of the text.</summary>
            <remarks>
                If false (default), the text is rendered horizontally. If true, the text is rendered vertically with
                one charater per line.<br/>
                <b>Note:</b> In the current implementation, new line characters are ignored when Verticalized = true.
                Therefore, it is not possible to render text in more than one column.
            </remarks>
        </member>
        
        <member name="T:DYMO.Label.Framework.IThickness">
            <summary>Describes the thickness of a frame around a rectangle.</summary>
            <remarks>
                Similar to <see cref="T:System.Windows.Thickness"/>.
                Thickness is used to specify border width.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.IThickness.Bottom">
            <summary>Gets or sets the width, in DPI, of the lower side of the bounding rectangle.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IThickness.Left">
            <summary>Gets or sets the width, in DPI, of the left side of the bounding rectangle.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IThickness.Right">
            <summary>Gets or sets the width, in DPI, of the right side of the bounding rectangle.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.IThickness.Top">
            <summary>Gets or sets the width, in DPI, of the upper side of the bounding rectangle.</summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.Label">
            <summary>
                Provides methods for loading labels.
            </summary>
            <remarks>
                <c>Label</c> class provides static methods for loading a label from an external resource, such as a file or URL.
            </remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Label.AddressObjectCount">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.GetObjectByName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.GetObjectText(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.Label.ObjectNames">
            <inheritdoc/>
        </member>
        <member name="P:DYMO.Label.Framework.Label.Objects">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.Open(System.IO.Stream)">
            <param name="stream">Stream to load a label from.</param>
            <summary>
                Loads a label from a stream.
            </summary>
            <returns>
                <see cref="T:DYMO.Label.Framework.ILabel"/> of loaded label.
            </returns>
            <remarks>
                This method loads a label from a stream. The stream specified by <paramref name="stream"/> can be any descendant of <see cref="System.IO.Stream"/>
                and can represent a file, a URL, or other source. The stream should contain a label definition in XML format.
            </remarks>
            <example>
                The following example loads a label from a local file and then prints the label. Though the stream is a FileStream,
                it can be 
                <code>
                    <![CDATA[
        void OpenLabelFromStream()
        {
            ILabel label;

            // obtain a reference to ILabel by loading a label from a file
            using (FileStream pngStream = new FileStream("TextLabel.label", FileMode.Open, FileAccess.Read))
                label = Label.Open(pngStream);

            // print it
            label.Print("DYMO LabelWriter 450 Turbo");
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.Label.Open(System.String)">
            <param name="uri">URL or file to load a label from.</param>
            <summary>
                Loads a label from a uri.
            </summary>
            <returns>
                <see cref="T:DYMO.Label.Framework.ILabel"/> of loaded label.
            </returns>
            <remarks>
                This method loads a label from a uri. The Uri can be a URL or a local file. The stream should contain a label definition in XML format.
            </remarks>
            <example>
                <code>
                    <![CDATA[
        void OpenLabelFromUrl()
        {
            // obtain a reference to ILabel by loading a label from an URL
            ILabel label = Label.Open("http://localhost/MyLabel.label");
            
            // print it
            label.Print("DYMO LabelWriter 450 Turbo");
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.Label.OpenXml(System.String)">
            <param name="xml">Label data in XML format.</param>
            <summary>
                Loads a label from an XML representation.
            </summary>
            <returns>
                <see cref="T:DYMO.Label.Framework.ILabel"/> of loaded label.
            </returns>
            <remarks>This method loads a label from an XML representation.</remarks>
            <example>
                <code>
                    <![CDATA[
        public void OpenLabelXml()
        {
            ILabel label = Label.OpenXml(@"
<DieCutLabel Version='8.0' Units='twips'>
    <PaperOrientation>Landscape</PaperOrientation>
    <Id>Address</Id>
    <PaperName>30252 Address</PaperName>
    <DrawCommands/>
    <ObjectInfo>
        <TextObject>
            <Name>TEXT</Name>
            <ForeColor Alpha='255' Red='0' Green='0' Blue='0' />
            <BackColor Alpha='0' Red='255' Green='255' Blue='255' />
            <LinkedObjectName></LinkedObjectName>
            <Rotation>Rotation0</Rotation>
            <IsMirrored>False</IsMirrored>
            <IsVariable>False</IsVariable>
            <HorizontalAlignment>Center</HorizontalAlignment>
            <VerticalAlignment>Middle</VerticalAlignment>
            <TextFitMode>ShrinkToFit</TextFitMode>
            <UseFullFontHeight>True</UseFullFontHeight>
            <Verticalized>False</Verticalized>
            <StyledText/>
        </TextObject>
        <Bounds X='331' Y='57.9999999999999' Width='4622' Height='1435' />
    </ObjectInfo>
</DieCutLabel>
");

            // set object text
            label.SetObjectText("TEXT", "42");

            // print it
            label.Print("DYMO LabelWriter 450 Turbo");
        }
                    ]]>
                </code>
            </example>
        </member>
        <member name="M:DYMO.Label.Framework.Label.Print(DYMO.Label.Framework.IPrinter)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.Print(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.Print(DYMO.Label.Framework.IPrinter,DYMO.Label.Framework.IPrintParams)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.Print(System.String,DYMO.Label.Framework.IPrintParams)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.Print(DYMO.Label.Framework.IPrinter,DYMO.Label.Framework.IPrintParams,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.Print(System.String,DYMO.Label.Framework.IPrintParams,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.RenderAsPng(DYMO.Label.Framework.IPrinter,DYMO.Label.Framework.ILabelRenderParams)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.SaveToFile(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.SaveToStream(System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.SaveToXml">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.SetAddressText(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.SetImagePngData(System.String,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.SetImageUri(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.SetObjectText(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DYMO.Label.Framework.Label.SetPostnetBarcodePosition(System.Int32,DYMO.Label.Framework.PostnetBarcodePosition)">
            <inheritdoc/>
        </member>

        <member name="T:DYMO.Label.Framework.LabelObject">
            <summary>Contains common label object properties.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.LabelObject.Name">
            <inheritdoc cref="P:DYMO.Label.Framework.ILabelObject.Name"/>
        </member>
        
        <member name="T:DYMO.Label.Framework.LabelRenderParams">
            <summary>Specifies parameters used to create a label image.</summary>
            <remarks>
                <b>LabelRenderParams</b> controls how the label image is generated.
                <b>LabelRenderParams</b> is the default implementation of <see cref="T:DYMO.Label.Framework.ILabelRenderParams"/>.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.LabelRenderParams.#ctor">
            <summary>
                Initializes <see cref="T:DYMO.Label.Framework.LabelRenderParams"/> using default parameters.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.LabelRenderParams.#ctor(DYMO.Label.Framework.IColor,DYMO.Label.Framework.IColor,System.Double,DYMO.Label.Framework.FlowDirection,System.Boolean)">
            <param name="labelColor">Specifies the label background color.</param>
            <param name="shadowColor">Specifies the label shadow color.</param>
            <param name="shadowDepth">Specifies the shadow depth.</param>
            <param name="flowDirection">Label flow direction.</param>
            <param name="useDisplayResolution">Label image resolution.</param>
            <summary>
                Initializes <see cref="T:DYMO.Label.Framework.LabelRenderParams"/> using specified parameters.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.LabelRenderParams.FlowDirection">
            <inheritdoc cref="P:DYMO.Label.Framework.ILabelRenderParams.FlowDirection"/>
        </member>
        <member name="P:DYMO.Label.Framework.LabelRenderParams.LabelColor">
            <inheritdoc cref="P:DYMO.Label.Framework.ILabelRenderParams.LabelColor"/>
        </member>
        <member name="P:DYMO.Label.Framework.LabelRenderParams.PngUseDisplayResolution">
            <inheritdoc cref="P:DYMO.Label.Framework.ILabelRenderParams.PngUseDisplayResolution"/>
        </member>
        <member name="P:DYMO.Label.Framework.LabelRenderParams.ShadowColor">
            <inheritdoc cref="P:DYMO.Label.Framework.ILabelRenderParams.ShadowColor"/>
        </member>
        <member name="P:DYMO.Label.Framework.LabelRenderParams.ShadowDepth">
            <inheritdoc cref="P:DYMO.Label.Framework.ILabelRenderParams.ShadowDepth"/>
        </member>
        
        <member name="T:DYMO.Label.Framework.LabelSetBuilder">
            <summary>
                Default ILabelSetBuilder implementation.
            </summary>
            <remarks>Use LabelSetBuilder to create formatted (styled) text with different text attributes.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.LabelSetBuilder.#ctor">
        </member>
        <member name="M:DYMO.Label.Framework.LabelSetBuilder.AddRecord">
            <inheritdoc cref="M:DYMO.Label.Framework.ILabelSetBuilder.AddRecord"/>
        </member>
        <member name="P:DYMO.Label.Framework.LabelSetBuilder.Xml">
            <inheritdoc cref="P:DYMO.Label.Framework.ILabelSetBuilder.Xml"/>
        </member>
        
        <member name="T:DYMO.Label.Framework.LabelWriterPrinter">
            <summary>Represents a LabelWriter printer.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.LabelWriterPrinter.IsTwinTurbo">
            <inheritdoc cref="P:DYMO.Label.Framework.ILabelWriterPrinter.IsTwinTurbo"/>
        </member>
        
        <member name="T:DYMO.Label.Framework.LabelWriterPrintParams">
            <summary>
                Print parameters for printing to LabelWriter printers.
            </summary>
            <remarks>
                <c>LabelWriterPrintParams"</c> is the default implementation of <see cref="T:DYMO.Label.Framework.ILabelWriterPrintParams"/> that allows for the setting of print parameters.
                See <see cref="T:DYMO.Label.Framework.ILabelWriterPrintParams"/> for a usage example.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.LabelWriterPrintParams.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:DYMO.Label.Framework.LabelWriterPrintParams"/> class using default parameters.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.LabelWriterPrintParams.#ctor(System.Int32,System.String,DYMO.Label.Framework.FlowDirection,DYMO.Label.Framework.RollSelection,DYMO.Label.Framework.LabelWriterPrintQuality)">
            <param name="copies">Number of copies to print.</param>
            <param name="jobDesctiption">Print job title.</param>
            <param name="flowDirection">Label flow direction.</param>
            <param name="rollSelection">Roll selection.</param>
            <param name="printQuality">Print quality.</param>
            <summary>
                Initializes a new instance of the <see cref="T:DYMO.Label.Framework.LabelWriterPrintParams"/> class using specified parameters.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.LabelWriterPrintParams.Copies">
            <inheritdoc cref="P:DYMO.Label.Framework.IPrintParams.Copies"/>
        </member>
        <member name="P:DYMO.Label.Framework.LabelWriterPrintParams.FlowDirection">
            <inheritdoc cref="P:DYMO.Label.Framework.IPrintParams.FlowDirection"/>
        </member>
        <member name="P:DYMO.Label.Framework.LabelWriterPrintParams.JobTitle">
            <inheritdoc cref="P:DYMO.Label.Framework.IPrintParams.JobTitle"/>
        </member>
        <member name="P:DYMO.Label.Framework.LabelWriterPrintParams.PrintQuality">
            <inheritdoc cref="P:DYMO.Label.Framework.ILabelWriterPrintParams.PrintQuality"/>
        </member>
        <member name="P:DYMO.Label.Framework.LabelWriterPrintParams.RollSelection">
            <inheritdoc cref="P:DYMO.Label.Framework.ILabelWriterPrintParams.RollSelection"/>
        </member>

        <member name="T:DYMO.Label.Framework.LabelWriterPrintQuality">
            <summary>
                Specifies print quality when printing to LabelWriter printers.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.LabelWriterPrintQuality.Auto">
            <summary>
                Print quality is automatically determined based on the types of objects on the label.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.LabelWriterPrintQuality.BarcodeAndGraphics">
            <summary>
                Barcode and graphics quality (slow printing); best for labels that contain barcodes and/or images.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.LabelWriterPrintQuality.Text">
            <summary>
                Text quality (fast printing); best for labels that contain text only.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.ObjectRotation">
            <summary>
                Specifies object rotation.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ObjectRotation.Rotation0">
            <summary>
                No rotation.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ObjectRotation.Rotation180">
            <summary>
                180 degree rotation.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ObjectRotation.Rotation270">
            <summary>
                270 degree rotation in counterclockwise direction.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ObjectRotation.Rotation90">
            <summary>
                90 degree rotation in counterclockwise direction.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.PaperOrientation">
            <summary>
                Paper orientation options for label printing.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.PaperOrientation.Landscape">
            <summary>
                Landscape label.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.PaperOrientation.Portrait">
            <summary>
                Portrait label.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.PostnetBarcodePosition">
            <summary>
                Specifies the position of IntelligentMail/Postnet barcode in an Address object.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.PostnetBarcodePosition.AboveAddress">
            <summary>
                Display barcode above address.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.PostnetBarcodePosition.BelowAddress">
            <summary>
                Display barcode below address.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.PostnetBarcodePosition.Suppress">
            <summary>
                Do not display barcode at all.
            </summary>
        </member>
        
        <!--<member name="T:DYMO.Label.Framework.Printer">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Printer(DYMO.DLS.Runtime.Printer)">
            <param name="printer">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Printer.CreatePrintJob(DYMO.Label.Framework.IPrintParams)">
            <param name="printParams">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Printer.IsConnected">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Printer.IsLocal">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Printer.ModelName">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Printer.Name">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>-->
        
        <member name="T:DYMO.Label.Framework.Printers">
            <summary>
                IPrinters implementation.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.Printers.#ctor">
        </member>
        <member name="M:DYMO.Label.Framework.Printers.GetPrinterByName(System.String)">
            <inheritdoc cref="M:DYMO.Label.Framework.IPrinters.GetPrinterByName(System.String)"/>
        </member>
        <member name="M:DYMO.Label.Framework.Printers.Contains(System.String)">
            <inheritdoc cref="M:DYMO.Label.Framework.IPrinters.Contains(System.String)"/>
        </member>


        <member name="M:DYMO.Label.Framework.Printers.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>IEnumerator that can be used to iterate through the collection.</returns>
        </member>

        <member name="P:DYMO.Label.Framework.Printers.Item(System.String)">
            <param name="printerName">Printer name.</param>
            <summary>Gets <see cref="T:DYMO.Label.Framework.IPrinter"/> in the collection by printer name.</summary>
        </member>
        

        <member name="T:DYMO.Label.Framework.PrintJob">
            <summary>
                IPrintJob implementation.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.PrintJob.#ctor(DYMO.Label.Framework.IPrinter,DYMO.Label.Framework.IPrintParams)">
            <param name="printer">Printer to print to.</param>
            <param name="printParams">Print parameters.</param>
        </member>
        <member name="M:DYMO.Label.Framework.PrintJob.AddLabel(DYMO.Label.Framework.ILabel)">
            <inheritdoc cref="M:DYMO.Label.Framework.IPrintJob.AddLabel(DYMO.Label.Framework.ILabel)"/>
        </member>
        <member name="M:DYMO.Label.Framework.PrintJob.Print">
            <inheritdoc cref="M:DYMO.Label.Framework.IPrintJob.Print"/>
        </member>
        
        <member name="T:DYMO.Label.Framework.Rect">
            <summary>Default IRect implementation.</summary>
        </member>
        <member name="M:DYMO.Label.Framework.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <param name="x">Rectangle x-coordinate.</param>
            <param name="y">Rectangle y-coordinate.</param>
            <param name="width">Rectangle width.</param>
            <param name="height">Rectangle height.</param>
        </member>
        <member name="P:DYMO.Label.Framework.Rect.Height">
            <inheritdoc cref="P:DYMO.Label.Framework.IRect.Height"/>
        </member>
        <member name="M:DYMO.Label.Framework.Rect.op_Equality(DYMO.Label.Framework.Rect,DYMO.Label.Framework.Rect)">
            <param name="rect1">First Rect object.</param>
            <param name="rect2">Second Rect object.</param>
            <summary>Indicates whether the specified Rects are equal.</summary>
            <returns>True, if the specified Rects are equal. False, if the specified Rects are not equal.</returns>
        </member>
        <member name="M:DYMO.Label.Framework.Rect.op_Inequality(DYMO.Label.Framework.Rect,DYMO.Label.Framework.Rect)">
            <param name="rect1">First Rect object.</param>
            <param name="rect2">Second Rect object.</param>
            <summary>Indicates whether the specified Rects are not equal.</summary>
            <returns>True, if the specified Rects are not equal. False, if the specified Rects are equal.</returns>
        </member>
        <member name="M:DYMO.Label.Framework.Rect.Equals(System.Object)">
            <param name="o">The object to compare with the current object.</param>
            <summary>Indicates whether the specified object is equal to the current object.</summary>
            <returns>True, if the specified object is equal to the current object. False, if the specified object is not equal to the current object.</returns>
        </member>

        <member name="M:DYMO.Label.Framework.Rect.Equals(DYMO.Label.Framework.Rect)">
            <param name="value">The Rect to compare with the current Rect.</param>
            <summary>Indicates whether the specified Rect is equal to the current Rect.</summary>
            <returns>True, if the specified Rect is equal to the current Rect. False, if the specified Rect is not equal to the current Rect.</returns>
        </member>

        <member name="M:DYMO.Label.Framework.Rect.Equals(DYMO.Label.Framework.Rect,DYMO.Label.Framework.Rect)">
            <param name="rect1">First Rect.</param>
            <param name="rect2">Second Rect.</param>
            <summary>Indicates whether the specified Rects are equal.</summary>
            <returns>True, if the specified Rects are equal. False, if the specified Rects are not equal.</returns>
        </member>


        <member name="M:DYMO.Label.Framework.Rect.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>

        <member name="P:DYMO.Label.Framework.Rect.Width">
            <inheritdoc cref="P:DYMO.Label.Framework.IRect.Width"/>
        </member>
        <member name="P:DYMO.Label.Framework.Rect.X">
            <inheritdoc cref="P:DYMO.Label.Framework.IRect.X"/>
        </member>
        <member name="P:DYMO.Label.Framework.Rect.Y">
            <inheritdoc cref="P:DYMO.Label.Framework.IRect.Y"/>
        </member>
        
        <member name="T:DYMO.Label.Framework.RollSelection">
            <summary>
                Specifies the roll to print to when printing to LabelWriter Twin Turbo printers.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.RollSelection.Auto">
            <summary>
                Selects the roll automatically.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.RollSelection.Left">
            <summary>
                Print to left roll only.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.RollSelection.Right">
            <summary>
                Print to right roll only.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.ShapeObject">
            <summary>Shape label object.</summary>
        </member>
        <member name="M:DYMO.Label.Framework.ShapeObject.#ctor">
        </member>
        
        <member name="M:DYMO.Label.Framework.ShapeObject.#ctor(System.String,DYMO.Label.Framework.ShapeType)">
            <param name="name">Object name.</param>
            <param name="shapeType">Shape type.</param>
            <summary>Initializes ShapeObject using specified name and shape type.</summary>
        </member>
        <member name="P:DYMO.Label.Framework.ShapeObject.FillColor">
            <inheritdoc cref="P:DYMO.Label.Framework.IShapeObject.FillColor"/>
        </member>
        <member name="P:DYMO.Label.Framework.ShapeObject.LineWidth">
            <inheritdoc cref="P:DYMO.Label.Framework.IShapeObject.LineWidth"/>
        </member>
        <member name="P:DYMO.Label.Framework.ShapeObject.ShapeType">
            <inheritdoc cref="P:DYMO.Label.Framework.IShapeObject.ShapeType"/>
        </member>
        <member name="P:DYMO.Label.Framework.ShapeObject.StrokeColor">
            <inheritdoc cref="P:DYMO.Label.Framework.IShapeObject.StrokeColor"/>
        </member>

        <member name="T:DYMO.Label.Framework.ShapeType">
            <summary>
                Supported shape types for the Shape label object.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ShapeType.Ellipse">
            <summary>
                Ellipse.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ShapeType.HorizontalLine">
            <summary>
                Horizontal line.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ShapeType.Rectangle">
            <summary>
                Rectangle.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.ShapeType.VerticalLine">
            <summary>
                Vertical line.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.StyledTextBlock">
            <summary>Provides information about a block of text with the same formatting throughout.</summary>
            <remarks>
                <b>StyledTextBlock</b> is default implementation of <see cref="T:DYMO.Label.Framework.IStyledTextBlock"/> interface.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.StyledTextBlock.#ctor(System.String,DYMO.Label.Framework.IFontInfo,DYMO.Label.Framework.IColor)">
            <param name="text">Block text.</param>
            <param name="font">Text font.</param>
            <param name="textColor">Text color.</param>
            <summary>
                Initializes <see cref="T:DYMO.Label.Framework.StyledTextBlock"/> using specified parameters.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.StyledTextBlock.Font">
            <inheritdoc cref="P:DYMO.Label.Framework.IStyledTextBlock.Font"/>
        </member>
        <member name="P:DYMO.Label.Framework.StyledTextBlock.Text">
            <inheritdoc cref="P:DYMO.Label.Framework.IStyledTextBlock.Text"/>
        </member>
        <member name="P:DYMO.Label.Framework.StyledTextBlock.TextColor">
            <inheritdoc cref="P:DYMO.Label.Framework.IStyledTextBlock.TextColor"/>
        </member>
        
        <member name="T:DYMO.Label.Framework.StyledTextBuilder">
            <summary>Allows construction of formatted (styled) text.</summary>
            <remarks>
                <b>StyledTextBuilder</b> is the default implementation of <see cref="T:DYMO.Label.Framework.IStyledTextBuilder"/>.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.StyledTextBuilder.#ctor">
            <summary>
                Initializes empty <see cref="T:DYMO.Label.Framework.StyledTextBuilder"/>.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.StyledTextBuilder.Append(DYMO.Label.Framework.IStyledTextBlock)">
            <inheritdoc cref="M:DYMO.Label.Framework.IStyledTextBuilder.Append(DYMO.Label.Framework.IStyledTextBlock)"/>
        </member>
        <member name="M:DYMO.Label.Framework.StyledTextBuilder.Append(System.String,DYMO.Label.Framework.IFontInfo,DYMO.Label.Framework.IColor)">
            <inheritdoc cref="M:DYMO.Label.Framework.IStyledTextBuilder.Append(System.String,DYMO.Label.Framework.IFontInfo,DYMO.Label.Framework.IColor)"/>
        </member>
        <member name="P:DYMO.Label.Framework.StyledTextBuilder.StyledText">
            <inheritdoc cref="P:DYMO.Label.Framework.IStyledTextBuilder.StyledText"/>
        </member>

        <member name="T:DYMO.Label.Framework.TapeAlignment">
            <summary>
                Specifies the tape leader and trailer when printing to Tape printers.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TapeAlignment.Center">
            <summary>
                Label content is centered; the label has a 10mm leader and a 10mm trailer.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TapeAlignment.Left">
            <summary>
                Label content is left aligned; the label has a 6mm leader and a 10mm trailer.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TapeAlignment.Right">
            <summary>
                Label content is right aligned; the label has a 10mm leader and a 6mm trailer.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.TapeCutMode">
            <summary>
                Specifies the tape cut mode when printing multiple labels to a Tape printer that supports the auto-cut feature.
            </summary>
            <remarks>
                Note: If the printer supports the auto-cut feature, the tape will always be cut at the end of a print job regardless of
                the selected option.
            </remarks>
        </member>
        <member name="F:DYMO.Label.Framework.TapeCutMode.AutoCut">
            <summary>
                Cut tape between labels.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TapeCutMode.ChainMarks">
            <summary>
                Print cut marks between labels; do not cut tape between labels.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.TapePrinter">
            <summary>
                Provides properties specific to Tape printers, such as "DYMO LabelMANAGER PC II."
            </summary>
            
        </member>
        <member name="P:DYMO.Label.Framework.TapePrinter.IsAutoCutSupported">
            <inheritdoc cref="P:DYMO.Label.Framework.ITapePrinter.IsAutoCutSupported"/>
        </member>

        <member name="T:DYMO.Label.Framework.TapePrintParams">
            <summary>
                Print parameters for printing to Tape printers.
            </summary>
            <remarks>
                <c>TapePrintParams"</c> is the default implementation of <see cref="T:DYMO.Label.Framework.ITapePrintParams"/> that allows for the setting of print parameters.
                See <see cref="T:DYMO.Label.Framework.ITapePrintParams"/> for a usage example.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.TapePrintParams.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:DYMO.Label.Framework.TapePrintParams"/> class using default parameters.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.TapePrintParams.#ctor(System.Int32,System.String,DYMO.Label.Framework.FlowDirection,DYMO.Label.Framework.TapeAlignment,DYMO.Label.Framework.TapeCutMode)">
            <param name="copies">Number of copies to print.</param>
            <param name="jobDesctiption">Print job title.</param>
            <param name="flowDirection">Label flow direction.</param>
            <param name="tapeAlignment">Tape alignment.</param>
            <param name="tapeCutMode">Tape cut mode.</param>
            <summary>
                Initializes a new instance of the <see cref="T:DYMO.Label.Framework.TapePrintParams"/> class using specified parameters.
            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.TapePrintParams.Copies">
            <inheritdoc cref="P:DYMO.Label.Framework.IPrintParams.Copies"/>
        </member>
        <member name="P:DYMO.Label.Framework.TapePrintParams.FlowDirection">
            <inheritdoc cref="P:DYMO.Label.Framework.IPrintParams.FlowDirection"/>
        </member>
        <member name="P:DYMO.Label.Framework.TapePrintParams.JobTitle">
            <inheritdoc cref="P:DYMO.Label.Framework.IPrintParams.JobTitle"/>
        </member>
        <member name="P:DYMO.Label.Framework.TapePrintParams.TapeAlignment">
            <inheritdoc cref="P:DYMO.Label.Framework.ITapePrintParams.TapeAlignment"/>
        </member>
        <member name="P:DYMO.Label.Framework.TapePrintParams.TapeCutMode">
            <inheritdoc cref="P:DYMO.Label.Framework.ITapePrintParams.TapeCutMode"/>
        </member>
        
        <member name="T:DYMO.Label.Framework.TextAlignment">
            <summary>
                Specifies the horizontal alignment of the content of text-based objects.
            </summary>
            <remarks>Note: For RightToLeft flow, 'left' means 'right' and 'right' means 'left'.</remarks>
        </member>
        <member name="F:DYMO.Label.Framework.TextAlignment.Center">
            <summary>
                Text is centered.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TextAlignment.CenterBlock">
            <summary>
                Lines are left aligned, but the starting position of each line is calculated as follows:<br/>
                    (ObjectWidth - MaxLineWidth) / 2.
                In other words, the longest line is centered and all other lines are left-aligned against the longest line.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TextAlignment.Left">
            <summary>
                Text is left aligned.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TextAlignment.Right">
            <summary>
                Text is right aligned.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.TextFitMode">
            <summary>
                Specifies content scaling for text-based objects.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TextFitMode.AlwaysFit">
            <summary>
                Text will be scaled to occupy all available space within the object bounds.
                The difference from Shrink To Fit is that the text can be scaled up as well as scaled down.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TextFitMode.None">
            <summary>
                No scaling is performed. Text is rendered using the specified size and is clipped at the object bounds.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TextFitMode.ShrinkToFit">
            <summary>
                Text is scaled down to fit within the object bounds.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.TextObject">
            <summary>
                Text label object.
            </summary>
            <remarks>
                A Text object displays text data.
                Use this class to create Text objects programmatically.
                To access existing objects, use ITextObject interface.
            </remarks>
        </member>
        <member name="M:DYMO.Label.Framework.TextObject.#ctor">
        </member>
        <member name="M:DYMO.Label.Framework.TextObject.#ctor(System.String)">
            <param name="name">Object name.</param>
        </member>
        <member name="M:DYMO.Label.Framework.TextObject.#ctor(System.String,System.String)">
            <param name="name">Object name.</param>
            <param name="text">Object text without formatting.</param>
        </member>
        <member name="P:DYMO.Label.Framework.TextObject.BackgroundColor">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.BackgroundColor"/>
        </member>
        <member name="P:DYMO.Label.Framework.TextObject.FitMode">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.FitMode"/>
        </member>
        <member name="P:DYMO.Label.Framework.TextObject.HorizontalAlignment">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.HorizontalAlignment"/>
        </member>
        <member name="P:DYMO.Label.Framework.TextObject.IsMirrored">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.IsMirrored"/>
        </member>
        <member name="P:DYMO.Label.Framework.TextObject.LineCount">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.LineCount"/>
        </member>
        <member name="P:DYMO.Label.Framework.TextObject.Rotation">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Rotation"/>
        </member>
        <member name="M:DYMO.Label.Framework.TextObject.SetLineFont(System.Int32,DYMO.Label.Framework.IFontInfo)">
            <inheritdoc cref="M:DYMO.Label.Framework.ITextObject.SetLineFont(System.Int32,DYMO.Label.Framework.IFontInfo)"/>
        </member>
        <member name="P:DYMO.Label.Framework.TextObject.StyledText">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.StyledText"/>
        </member>
        <member name="P:DYMO.Label.Framework.TextObject.Text">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Text"/>
        </member>
        <member name="P:DYMO.Label.Framework.TextObject.TextColor">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.TextColor"/>
        </member>
        <member name="P:DYMO.Label.Framework.TextObject.TextMarkup">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.TextMarkup"/>
        </member>
        <member name="P:DYMO.Label.Framework.TextObject.VerticalAlignment">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.VerticalAlignment"/>
        </member>
        <member name="P:DYMO.Label.Framework.TextObject.Verticalized">
            <inheritdoc cref="P:DYMO.Label.Framework.ITextObject.Verticalized"/>
        </member>

        <member name="T:DYMO.Label.Framework.TextVerticalAlignment">
            <summary>
                Specifies the vertical alignment of the content of text-based objects.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TextVerticalAlignment.Bottom">
            <summary>
                Text is bottom aligned.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TextVerticalAlignment.Middle">
            <summary>
                Text is centered.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.TextVerticalAlignment.Top">
            <summary>
                Text is top aligned.
            </summary>
        </member>
        
        <member name="T:DYMO.Label.Framework.Thickness">
            <summary>Describes the thickness of a frame around a rectangle.</summary>
        </member>
        <member name="M:DYMO.Label.Framework.Thickness.#ctor(System.Double)">
            <param name="value">The uniform length applied to all four sides of the bounding rectangle.</param>
            <summary>
                Initializes a new instance of Thickness that has the specified uniform length on each side.
            </summary>
        </member>
        <member name="M:DYMO.Label.Framework.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <param name="left">The thickness for the left side of the rectangle.</param>
            <param name="top">The thickness for the top side of the rectangle.</param>
            <param name="right">The thickness for the right side of the rectangle.</param>
            <param name="bottom">The thickness for the bottom side of the rectangle.</param>
            <summary>
                Initializes a new instance of Thickness that has specific lengths applied to each side of the rectangle.

            </summary>
        </member>
        <member name="P:DYMO.Label.Framework.Thickness.Bottom">
            <inheritdoc cref="P:DYMO.Label.Framework.IThickness.Bottom"/>
        </member>
        <member name="M:DYMO.Label.Framework.Thickness.Equals(System.Object)">
            <param name="other">The object to compare with the current object.</param>
            <summary>Indicates whether the specified object is equal to the current object.</summary>
            <returns>True, if the specified objects are equal. False, if the specified objects are not equal.</returns>
        </member>
        <member name="M:DYMO.Label.Framework.Thickness.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:DYMO.Label.Framework.Thickness.Left">
            <inheritdoc cref="P:DYMO.Label.Framework.IThickness.Left"/>
        </member>
        <member name="M:DYMO.Label.Framework.Thickness.op_Equality(DYMO.Label.Framework.Thickness,DYMO.Label.Framework.Thickness)">
            <param name="t1">First Thickness object.</param>
            <param name="t2">Second Thickness object.</param>
            <summary>Indicates whether or not the specified Thicknesses are equal.</summary>
            <returns>True, if the specified Thicknesses are equal. False, if the specified Thicknesses are not equal.</returns>
        </member>
        <member name="M:DYMO.Label.Framework.Thickness.op_Inequality(DYMO.Label.Framework.Thickness,DYMO.Label.Framework.Thickness)">
            <param name="t1">First Thickness object.</param>
            <param name="t2">Second Thickness object.</param>
            <summary>Indicates whether or not the specified Thicknesses are not equal.</summary>
            <returns>True, if the specified Thicknesses are not equal. False, if the specified Thicknesses are equal.</returns>
        </member>
        <member name="P:DYMO.Label.Framework.Thickness.Right">
            <inheritdoc cref="P:DYMO.Label.Framework.IThickness.Right"/>
        </member>
        <member name="P:DYMO.Label.Framework.Thickness.Top">
            <inheritdoc cref="P:DYMO.Label.Framework.IThickness.Top"/>
        </member>
        
        <member name="T:DYMO.Label.Framework.VerticalAlignment">
            <summary>
                Specifies the vertical alignment of the content of a Barcode or Image object, related to the object bounds.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.VerticalAlignment.Bottom">
            <summary>
                Content is bottom-aligned.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.VerticalAlignment.Center">
            <summary>
                Content is centered.
            </summary>
        </member>
        <member name="F:DYMO.Label.Framework.VerticalAlignment.Top">
            <summary>
                Content is top-aligned.
            </summary>
        </member>
        
        <!--
        <member name="T:DYMO.Label.Framework.Com.AddressObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.AddressObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.AddressObject.BackgroundColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.AddressObject.BarcodePosition">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.AddressObject.FitMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.AddressObject.HorizontalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.AddressObject.IsMirrored">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.AddressObject.LineCount">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.AddressObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.AddressObject.SetLineFont(System.Int32,DYMO.Label.Framework.IFontInfo)">
            <param name="lineNo">To be added.</param>
            <param name="fontInfo">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.AddressObject.Text">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.AddressObject.TextColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.AddressObject.TextMarkup">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.AddressObject.VerticalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.BarcodeObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.BarcodeObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.BarcodeObject.BarcodeSize">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.BarcodeObject.BarcodeText">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.BarcodeObject.BarcodeType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.BarcodeObject.HorizontalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.BarcodeObject.LinkedObjectName">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.BarcodeObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.BarcodeObject.TextFont">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.BarcodeObject.TextPosition">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.BarcodeObject.Validate">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.CircularTextObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.CircularTextObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CircularTextObject.BackgroundColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CircularTextObject.DisplayMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CircularTextObject.Font">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CircularTextObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CircularTextObject.StartAngle">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CircularTextObject.Text">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CircularTextObject.TextAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CircularTextObject.TextColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ContinuousLabel">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabel.CreateCell">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabel.GetFixedLength">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabel.LabelType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabel.LengthMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabel.RootCell">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabel.SetAutoLengthMode">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabel.SetFixedLengthMode(System.Double)">
            <param name="fixedLength">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ContinuousLabelCell">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabelCell.BorderColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabelCell.BorderStyle">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabelCell.BorderWidth">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabelCell.GetFixedSize">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabelCell.GetProportionalRatio">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabelCell.LabelObject">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabelCell.ObjectMargin">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabelCell.SetAutoSize">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabelCell.SetFixedSize(System.Double)">
            <param name="fixedSize">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabelCell.SetProportionalSize(System.Double)">
            <param name="ratio">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabelCell.SizeMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabelCell.Subcells">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabelCell.SubcellsOrientation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ContinuousLabelCellList">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabelCellList.Add(DYMO.Label.Framework.Com.IContinuousLabelCell)">
            <param name="cell">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabelCellList.Clear">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabelCellList.Count">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabelCellList.GetEnumerator">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabelCellList.IndexOf(DYMO.Label.Framework.Com.IContinuousLabelCell)">
            <param name="cell">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabelCellList.Insert(System.Int32,DYMO.Label.Framework.Com.IContinuousLabelCell)">
            <param name="index">To be added.</param>
            <param name="cell">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ContinuousLabelCellList.Item(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabelCellList.Remove(DYMO.Label.Framework.Com.IContinuousLabelCell)">
            <param name="cell">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ContinuousLabelCellList.RemoveAt(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.CounterObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.CounterObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.BackgroundColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.Current">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.FitMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.Font">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.FormatWidth">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.HorizontalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.IncludeLeadingZeros">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.Increment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.IsMirrored">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.PostText">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.PreText">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.Start">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.Text">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.TextColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.VerticalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.CounterObject.Verticalized">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.DateTimeObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.DateTimeObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.BackgroundColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.Culture">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.DateFormat">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.FitMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.Font">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.HorizontalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.IncludeTime">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.IsMirrored">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.PostText">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.PreText">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.Text">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.TextColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.Use24HourFormat">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.VerticalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DateTimeObject.Verticalized">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.DieCutLabel">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.DieCutLabel.AddObject(DYMO.Label.Framework.Com.ILabelObject,DYMO.Label.Framework.IRect)">
            <param name="obj">To be added.</param>
            <param name="bounds">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.DieCutLabel.BringToFront(DYMO.Label.Framework.Com.ILabelObject)">
            <param name="obj">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.DieCutLabel.DeleteObject(DYMO.Label.Framework.Com.ILabelObject)">
            <param name="obj">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.DieCutLabel.GetObjectPosition(System.String)">
            <param name="objectName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.DieCutLabel.LabelType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.DieCutLabel.MoveObject(DYMO.Label.Framework.Com.ILabelObject,System.Double,System.Double)">
            <param name="obj">To be added.</param>
            <param name="x">To be added.</param>
            <param name="y">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.DieCutLabel.ResizeObject(DYMO.Label.Framework.Com.ILabelObject,System.Double,System.Double)">
            <param name="obj">To be added.</param>
            <param name="width">To be added.</param>
            <param name="height">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.DieCutLabel.SendToBack(DYMO.Label.Framework.Com.ILabelObject)">
            <param name="obj">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.DieCutLabel.SetObjectPosition(System.String,DYMO.Label.Framework.IRect)">
            <param name="objectName">To be added.</param>
            <param name="position">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.Framework">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.Framework">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.BlackColor">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.CreateColor(System.Byte,System.Byte,System.Byte)">
            <param name="r">To be added.</param>
            <param name="g">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.CreateColorArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
            <param name="a">To be added.</param>
            <param name="r">To be added.</param>
            <param name="g">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.CreateContinuousLabel(System.String,DYMO.Label.Framework.PaperOrientation,DYMO.Label.Framework.ContinuousLabelLengthMode,System.Double)">
            <param name="labelId">To be added.</param>
            <param name="paperOrientation">To be added.</param>
            <param name="lengthMode">To be added.</param>
            <param name="labelLength">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.CreateDieCutLabel(System.String,DYMO.Label.Framework.PaperOrientation)">
            <param name="labelId">To be added.</param>
            <param name="paperOrientation">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.CreateFont(System.String,System.Double,DYMO.Label.Framework.FontStyle)">
            <param name="fontName">To be added.</param>
            <param name="fontSize">To be added.</param>
            <param name="fontStyle">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.CreateRect(System.Double,System.Double,System.Double,System.Double)">
            <param name="x">To be added.</param>
            <param name="y">To be added.</param>
            <param name="width">To be added.</param>
            <param name="height">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.CreateThickness(System.Double,System.Double,System.Double,System.Double)">
            <param name="left">To be added.</param>
            <param name="top">To be added.</param>
            <param name="right">To be added.</param>
            <param name="bottom">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.DarkGrayColor">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.GetInterfaceSafetyOptions(System.Guid@,System.Int32@,System.Int32@)">
            <param name="riid">To be added.</param>
            <param name="pdwSupportedOptions">To be added.</param>
            <param name="pdwEnabledOptions">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.GetPrinterByName(System.String)">
            <param name="printerName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.GetPrintersInfo">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.GrayColor">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Framework.LabelWriterPrinters">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.LightGrayColor">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.LoadImageAsPngBase64(System.String)">
            <param name="imageUri">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.LoadLabelXml(System.String)">
            <param name="uri">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.OpenLabel(System.String)">
            <param name="uri">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.OpenLabelXml(System.String)">
            <param name="xml" />
            <summary>
                Opens a label from a string contains xml label definition
            </summary>
            <returns />
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Framework.Printers">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.PrintLabel(System.String,System.String,System.String,System.String)">
            <param name="printerName">To be added.</param>
            <param name="printParamsXml">To be added.</param>
            <param name="labelXml">To be added.</param>
            <param name="labelSetXml">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.RenderLabel(System.String,System.String,System.String)">
            <param name="labelXml">To be added.</param>
            <param name="renderParamsXml">To be added.</param>
            <param name="printerName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.SetInterfaceSafetyOptions(System.Guid@,System.Int32,System.Int32)">
            <param name="riid">To be added.</param>
            <param name="dwOptionSetMask">To be added.</param>
            <param name="dwEnabledOptions">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.SetWebProxy(DYMO.Label.Framework.Com.IWebProxy)">
            <param name="webProxy">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Framework.TapePrinters">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.TransparentColor">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Framework.WhiteColor">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IAddressObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IAddressObject.BackgroundColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IAddressObject.BarcodePosition">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IAddressObject.FitMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IAddressObject.HorizontalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IAddressObject.IsMirrored">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IAddressObject.LineCount">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IAddressObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IAddressObject.SetLineFont(System.Int32,DYMO.Label.Framework.IFontInfo)">
            <param name="lineNo">To be added.</param>
            <param name="fontInfo">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IAddressObject.Text">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IAddressObject.TextColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IAddressObject.TextMarkup">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IAddressObject.VerticalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IBarcodeObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IBarcodeObject.BarcodeSize">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IBarcodeObject.BarcodeText">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IBarcodeObject.BarcodeType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IBarcodeObject.HorizontalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IBarcodeObject.LinkedObjectName">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IBarcodeObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IBarcodeObject.TextFont">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IBarcodeObject.TextPosition">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IBarcodeObject.Validate">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ICircularTextObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICircularTextObject.BackgroundColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICircularTextObject.DisplayMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICircularTextObject.Font">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICircularTextObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICircularTextObject.StartAngle">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICircularTextObject.Text">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICircularTextObject.TextAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICircularTextObject.TextColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IContinuousLabel">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabel.CreateCell">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabel.GetFixedLength">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IContinuousLabel.LengthMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IContinuousLabel.RootCell">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabel.SetAutoLengthMode">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabel.SetFixedLengthMode(System.Double)">
            <param name="fixedLength">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IContinuousLabelCell">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IContinuousLabelCell.BorderColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IContinuousLabelCell.BorderStyle">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IContinuousLabelCell.BorderWidth">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabelCell.GetFixedSize">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabelCell.GetProportionalRatio">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IContinuousLabelCell.LabelObject">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IContinuousLabelCell.ObjectMargin">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabelCell.SetAutoSize">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabelCell.SetFixedSize(System.Double)">
            <param name="fixedSize">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabelCell.SetProportionalSize(System.Double)">
            <param name="ratio">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IContinuousLabelCell.SizeMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IContinuousLabelCell.Subcells">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IContinuousLabelCell.SubcellsOrientation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IContinuousLabelCellList">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabelCellList.Add(DYMO.Label.Framework.Com.IContinuousLabelCell)">
            <param name="cell">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabelCellList.Clear">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IContinuousLabelCellList.Count">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabelCellList.IndexOf(DYMO.Label.Framework.Com.IContinuousLabelCell)">
            <param name="cell">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabelCellList.Insert(System.Int32,DYMO.Label.Framework.Com.IContinuousLabelCell)">
            <param name="index">To be added.</param>
            <param name="cell">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IContinuousLabelCellList.Item(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabelCellList.Remove(DYMO.Label.Framework.Com.IContinuousLabelCell)">
            <param name="cell">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IContinuousLabelCellList.RemoveAt(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ICounterObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.BackgroundColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.Current">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.FitMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.Font">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.FormatWidth">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.HorizontalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.IncludeLeadingZeros">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.Increment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.IsMirrored">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.PostText">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.PreText">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.Start">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.Text">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.TextColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.VerticalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ICounterObject.Verticalized">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IDateTimeObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.BackgroundColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.Culture">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.DateFormat">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.FitMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.Font">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.HorizontalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.IncludeTime">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.IsMirrored">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.PostText">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.PreText">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.Text">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.TextColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.Use24HourFormat">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.VerticalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IDateTimeObject.Verticalized">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IDieCutLabel">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IDieCutLabel.AddObject(DYMO.Label.Framework.Com.ILabelObject,DYMO.Label.Framework.IRect)">
            <param name="obj">To be added.</param>
            <param name="bounds">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IDieCutLabel.BringToFront(DYMO.Label.Framework.Com.ILabelObject)">
            <param name="obj">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IDieCutLabel.DeleteObject(DYMO.Label.Framework.Com.ILabelObject)">
            <param name="obj">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IDieCutLabel.GetObjectPosition(System.String)">
            <param name="objectName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IDieCutLabel.MoveObject(DYMO.Label.Framework.Com.ILabelObject,System.Double,System.Double)">
            <param name="obj">To be added.</param>
            <param name="x">To be added.</param>
            <param name="y">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IDieCutLabel.ResizeObject(DYMO.Label.Framework.Com.ILabelObject,System.Double,System.Double)">
            <param name="obj">To be added.</param>
            <param name="width">To be added.</param>
            <param name="height">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IDieCutLabel.SendToBack(DYMO.Label.Framework.Com.ILabelObject)">
            <param name="obj">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IDieCutLabel.SetObjectPosition(System.String,DYMO.Label.Framework.IRect)">
            <param name="objectName">To be added.</param>
            <param name="position">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IFramework">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.BlackColor">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.CreateColor(System.Byte,System.Byte,System.Byte)">
            <param name="r">To be added.</param>
            <param name="g">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.CreateColorArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
            <param name="a">To be added.</param>
            <param name="r">To be added.</param>
            <param name="g">To be added.</param>
            <param name="b">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.CreateContinuousLabel(System.String,DYMO.Label.Framework.PaperOrientation,DYMO.Label.Framework.ContinuousLabelLengthMode,System.Double)">
            <param name="labelId">To be added.</param>
            <param name="paperOrientation">To be added.</param>
            <param name="lengthMode">To be added.</param>
            <param name="labelLength">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.CreateDieCutLabel(System.String,DYMO.Label.Framework.PaperOrientation)">
            <param name="labelId">To be added.</param>
            <param name="paperOrientation">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.CreateFont(System.String,System.Double,DYMO.Label.Framework.FontStyle)">
            <param name="fontName">To be added.</param>
            <param name="fontSize">To be added.</param>
            <param name="fontStyle">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.CreateRect(System.Double,System.Double,System.Double,System.Double)">
            <param name="x">To be added.</param>
            <param name="y">To be added.</param>
            <param name="width">To be added.</param>
            <param name="height">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.CreateThickness(System.Double,System.Double,System.Double,System.Double)">
            <param name="left">To be added.</param>
            <param name="top">To be added.</param>
            <param name="right">To be added.</param>
            <param name="bottom">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.DarkGrayColor">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.GetPrinterByName(System.String)">
            <param name="printerName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.GetPrintersInfo">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.GrayColor">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IFramework.LabelWriterPrinters">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.LightGrayColor">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.LoadImageAsPngBase64(System.String)">
            <param name="imageUri" />
            <summary>
                Load image from specified uri, e.g. http:// or file:// or just a file name
            </summary>
            <returns>Base64-encoded PNG stream of the image's data</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.LoadLabelXml(System.String)">
            <param name="uri">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.OpenLabel(System.String)">
            <param name="uri">
                Url to open label from. Might be both Url, like
                http://localhost/data/address.label or a local file name, e.g.
                c:\data\address.label
            </param>
            <summary>
                Opens a label from a file or url
            </summary>
            <returns>opened label</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.OpenLabelXml(System.String)">
            <param name="xml" />
            <summary>
                Opens a label from a string contains xml label definition
            </summary>
            <returns />
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IFramework.Printers">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.PrintLabel(System.String,System.String,System.String,System.String)">
            <param name="printerName">To be added.</param>
            <param name="printParamsXml">To be added.</param>
            <param name="labelXml">To be added.</param>
            <param name="labelSetXml">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.RenderLabel(System.String,System.String,System.String)">
            <param name="labelXml">To be added.</param>
            <param name="renderParamsXml">To be added.</param>
            <param name="printerName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.SetWebProxy(DYMO.Label.Framework.Com.IWebProxy)">
            <param name="webProxy">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IFramework.TapePrinters">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.TransparentColor">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IFramework.WhiteColor">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IImageObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IImageObject.BorderColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IImageObject.BorderWidth">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IImageObject.HorizontalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IImageObject.ImagePngData">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IImageObject.ImagePngDataBase64">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IImageObject.LoadFromFile(System.String)">
            <param name="fileName">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IImageObject.LoadFromUri(System.String)">
            <param name="uri">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IImageObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IImageObject.ScaleMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IImageObject.VerticalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ILabel">
            <summary>
                Represents a Label
            </summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ILabel.AddressObjectCount">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.GetObjectByName(System.String)">
            <param name="objectName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.GetObjectNames">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.GetObjectText(System.String)">
            <param name="objectName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ILabel.LabelObjects">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ILabel.LabelType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.Print(DYMO.Label.Framework.Com.IPrinter,DYMO.Label.Framework.IPrintParams)">
            <param name="printer" />
            <param name="printParams" />
            <summary>
                Prints one label
            </summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.PrintLabelSet(DYMO.Label.Framework.Com.IPrinter,DYMO.Label.Framework.IPrintParams,System.String)">
            <param name="printer" />
            <param name="printParams" />
            <param name="labelSetXml" />
            <summary>
                Prints several copies of the same label layout using different text
            </summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.RenderAsPng(DYMO.Label.Framework.Com.IPrinter,DYMO.Label.Framework.ILabelRenderParams)">
            <param name="printer">To be added.</param>
            <param name="renderParams">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.RenderAsPngBase64(DYMO.Label.Framework.Com.IPrinter,DYMO.Label.Framework.ILabelRenderParams)">
            <param name="printer">To be added.</param>
            <param name="renderParams">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.SaveToFile(System.String)">
            <param name="fileName">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.SaveToXml">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.SetAddressText(System.Int32,System.String)">
            <param name="index">To be added.</param>
            <param name="text">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.SetImagePngData(System.String,System.Byte[])">
            <param name="imageName">To be added.</param>
            <param name="pngData">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.SetImagePngDataBase64(System.String,System.String)">
            <param name="imageName">To be added.</param>
            <param name="pngData">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.SetImageUri(System.String,System.String)">
            <param name="imageName">To be added.</param>
            <param name="uri">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.SetObjectText(System.String,System.String)">
            <param name="objectName">To be added.</param>
            <param name="text">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabel.SetPostnetBarcodePosition(System.Int32,DYMO.Label.Framework.PostnetBarcodePosition)">
            <param name="index">To be added.</param>
            <param name="position">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ILabelObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ILabelObject.Name">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ILabelObject.ObjectType">
            <summary>
                Object type string as defined in xml file
                this is needed for typeless late-bound clients
            </summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ILabelObjects">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ILabelObjects.Count">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabelObjects.GetObjectByIndex(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabelObjects.GetObjectByName(System.String)">
            <param name="objectName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ILabelObjects.Item(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ILabelRecordBuilder">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabelRecordBuilder.AddImage(System.String,System.String)">
            <param name="objectName">To be added.</param>
            <param name="imageUri">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabelRecordBuilder.AddImagePngBase64(System.String,System.String)">
            <param name="objectName">To be added.</param>
            <param name="base64Image">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabelRecordBuilder.AddStyledText(System.String,DYMO.Label.Framework.Com.IStyledText)">
            <param name="objectName">To be added.</param>
            <param name="styledText">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabelRecordBuilder.AddText(System.String,System.String)">
            <param name="objectName">To be added.</param>
            <param name="text">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabelRecordBuilder.AddTextMarkup(System.String,System.String)">
            <param name="objectName">To be added.</param>
            <param name="textMarkup">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ILabelSetBuilder">
            <summary>
                Provides an interface to build a label set
            </summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ILabelSetBuilder.AddRecord">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ILabelSetBuilder.Xml">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ILabelWriterPrinter">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ILabelWriterPrinter.IsTwinTurbo">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ImageObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.ImageObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ImageObject.BorderColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ImageObject.BorderWidth">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ImageObject.HorizontalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ImageObject.ImagePngData">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ImageObject.ImagePngDataBase64">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ImageObject.LoadFromFile(System.String)">
            <param name="fileName">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ImageObject.LoadFromUri(System.String)">
            <param name="uri">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ImageObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ImageObject.ScaleMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ImageObject.VerticalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IPrinter">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IPrinter.CreatePrintJob(DYMO.Label.Framework.IPrintParams)">
            <param name="printParams" />
            <summary>
                Print labels with different layout, or same layout but different data in as one print job
            </summary>
            <returns />
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IPrinter.IsConnected">
            <summary>
                Printer status - connected or disconnected
            </summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IPrinter.IsLocal">
            <summary>
                Printer connection - is it a local printer (including printers connected using
                a printer server, or a network shared printer
            </summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IPrinter.ModelName">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IPrinter.Name">
            <summary>
                Printer name
            </summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IPrinter.PrinterType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IPrinters">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IPrinters.Count">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IPrinters.GetPrinterByName(System.String)">
            <param name="printerName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IPrinters.Item(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IPrintJob">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IPrintJob.AddLabel(DYMO.Label.Framework.Com.ILabel)">
            <param name="label">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IPrintJob.Print">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IShapeObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IShapeObject.FillColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IShapeObject.LineWidth">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IShapeObject.ShapeType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IShapeObject.StrokeColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IStringList">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IStringList.Count">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IStringList.Item(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IStyledText">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IStyledText.BlockCount">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IStyledText.Item(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IStyledText.Text">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IStyledTextBuilder">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IStyledTextBuilder.Append(System.String,DYMO.Label.Framework.IFontInfo,DYMO.Label.Framework.IColor)">
            <param name="text">To be added.</param>
            <param name="font">To be added.</param>
            <param name="textColor">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IStyledTextBuilder.AppendBlock(DYMO.Label.Framework.IStyledTextBlock)">
            <param name="block">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.IStyledTextBuilder.ToStyledText">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ITapePrinter">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ITapePrinter.IsAutoCutSupported">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ITextObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ITextObject.BackgroundColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ITextObject.FitMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ITextObject.HorizontalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ITextObject.IsMirrored">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ITextObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.ITextObject.SetLineFont(System.Int32,DYMO.Label.Framework.IFontInfo)">
            <param name="lineNo">To be added.</param>
            <param name="fontInfo">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ITextObject.Text">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ITextObject.TextColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ITextObject.TextMarkup">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ITextObject.VerticalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ITextObject.Verticalized">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.IWebProxy">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IWebProxy.Address">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IWebProxy.BypassList">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IWebProxy.BypassOnLocal">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IWebProxy.Domain">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IWebProxy.Password">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.IWebProxy.UserName">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.Label">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.Label(DYMO.Label.Framework.Label)">
            <param name="label">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Label.AddressObjectCount">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.GetObjectByName(System.String)">
            <param name="objectName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.GetObjectNames">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.GetObjectText(System.String)">
            <param name="objectName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Label.LabelObjects">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Label.LabelType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.Print(DYMO.Label.Framework.Com.IPrinter,DYMO.Label.Framework.IPrintParams)">
            <param name="printer">To be added.</param>
            <param name="printParams">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.PrintLabelSet(DYMO.Label.Framework.Com.IPrinter,DYMO.Label.Framework.IPrintParams,System.String)">
            <param name="printer">To be added.</param>
            <param name="printParams">To be added.</param>
            <param name="labelSetXml">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.RenderAsPng(DYMO.Label.Framework.Com.IPrinter,DYMO.Label.Framework.ILabelRenderParams)">
            <param name="printer">To be added.</param>
            <param name="renderParams">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.RenderAsPngBase64(DYMO.Label.Framework.Com.IPrinter,DYMO.Label.Framework.ILabelRenderParams)">
            <param name="printer">To be added.</param>
            <param name="renderParams">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.SaveToFile(System.String)">
            <param name="fileName">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.SaveToXml">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.SetAddressText(System.Int32,System.String)">
            <param name="index">To be added.</param>
            <param name="text">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.SetImagePngData(System.String,System.Byte[])">
            <param name="imageName">To be added.</param>
            <param name="pngData">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.SetImagePngDataBase64(System.String,System.String)">
            <param name="imageName">To be added.</param>
            <param name="pngData">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.SetImageUri(System.String,System.String)">
            <param name="imageName">To be added.</param>
            <param name="uri">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.SetObjectText(System.String,System.String)">
            <param name="objectName">To be added.</param>
            <param name="text">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Label.SetPostnetBarcodePosition(System.Int32,DYMO.Label.Framework.PostnetBarcodePosition)">
            <param name="index">To be added.</param>
            <param name="position">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.LabelObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.LabelObject(DYMO.Label.Framework.LabelObject)">
            <param name="frameworkObject">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.LabelObject.Name">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.LabelObject.ObjectType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.LabelObjects">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.LabelObjects.Count">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.LabelObjects.GetEnumerator">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.LabelObjects.GetObjectByIndex(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.LabelObjects.GetObjectByName(System.String)">
            <param name="objectName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.LabelObjects.Item(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.LabelRecordBuilder">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.LabelRecordBuilder.AddImage(System.String,System.String)">
            <param name="objectName">To be added.</param>
            <param name="imageUri">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.LabelRecordBuilder.AddImagePngBase64(System.String,System.String)">
            <param name="objectName">To be added.</param>
            <param name="base64Image">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.LabelRecordBuilder.AddStyledText(System.String,DYMO.Label.Framework.Com.IStyledText)">
            <param name="objectName">To be added.</param>
            <param name="styledText">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.LabelRecordBuilder.AddText(System.String,System.String)">
            <param name="objectName">To be added.</param>
            <param name="text">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.LabelRecordBuilder.AddTextMarkup(System.String,System.String)">
            <param name="objectName">To be added.</param>
            <param name="textMarkup">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.LabelSetBuilder">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.LabelSetBuilder">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.LabelSetBuilder.AddRecord">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.LabelSetBuilder.Xml">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.LabelWriterPrinter">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.LabelWriterPrinter.IsTwinTurbo">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.LabelWriterPrinter.PrinterType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.Printer">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.Printer(DYMO.Label.Framework.Printer)">
            <param name="printer">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Printer.CreatePrintJob(DYMO.Label.Framework.IPrintParams)">
            <param name="printParams">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Printer.IsConnected">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Printer.IsLocal">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Printer.ModelName">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Printer.Name">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Printer.PrinterType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.Printers">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.Printers">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.Printers(DYMO.Label.Framework.Printers)">
            <param name="printers">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Printers.Count">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Printers.GetEnumerator">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.Printers.GetPrinterByName(System.String)">
            <param name="printerName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.Printers.Item(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.PrintJob">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.PrintJob.AddLabel(DYMO.Label.Framework.Com.ILabel)">
            <param name="label">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.PrintJob.Print">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.ShapeObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.ShapeObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ShapeObject.FillColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ShapeObject.LineWidth">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ShapeObject.ShapeType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.ShapeObject.StrokeColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.StringList">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.StringList.Count">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.StringList.GetEnumerator">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.StringList.Item(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.StyledText">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.StyledText.BlockCount">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.StyledText.Item(System.Int32)">
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.StyledText.System#Collections#IEnumerable#GetEnumerator">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.StyledText.Text">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.StyledTextBuilder">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.StyledTextBuilder">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.StyledTextBuilder.Append(System.String,DYMO.Label.Framework.IFontInfo,DYMO.Label.Framework.IColor)">
            <param name="text">To be added.</param>
            <param name="font">To be added.</param>
            <param name="textColor">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.StyledTextBuilder.AppendBlock(DYMO.Label.Framework.IStyledTextBlock)">
            <param name="block">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.StyledTextBuilder.ToStyledText">
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.TapePrinter">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.TapePrinter.IsAutoCutSupported">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.TapePrinter.PrinterType">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.TextObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.TextObject">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.TextObject.BackgroundColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.TextObject.FitMode">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.TextObject.HorizontalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.TextObject.IsMirrored">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.TextObject.Rotation">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:DYMO.Label.Framework.Com.TextObject.SetLineFont(System.Int32,DYMO.Label.Framework.IFontInfo)">
            <param name="lineNo">To be added.</param>
            <param name="fontInfo">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.TextObject.Text">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.TextObject.TextColor">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.TextObject.TextMarkup">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.TextObject.VerticalAlignment">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.TextObject.Verticalized">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="T:DYMO.Label.Framework.Com.WebProxy">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="C:DYMO.Label.Framework.Com.WebProxy">
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.WebProxy.Address">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.WebProxy.BypassList">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.WebProxy.BypassOnLocal">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.WebProxy.Domain">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.WebProxy.Password">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:DYMO.Label.Framework.Com.WebProxy.UserName">
            <summary>To be added.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>-->
    </members>
</doc>
